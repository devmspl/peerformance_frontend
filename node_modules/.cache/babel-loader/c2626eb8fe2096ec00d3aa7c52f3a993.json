{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Dashboard/CircularProgressbarComponent.jsx\";\nimport React from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport lockOpen from \"../Styleguide/icons/basic-lock-open.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CircularProgressbarComponent = _ref => {\n  let {\n    title,\n    value,\n    text,\n    counterClockwise,\n    months,\n    pathColor,\n    trailColor,\n    unlock,\n    donutChartId,\n    customText\n  } = _ref;\n\n  const getValue = () => {\n    if (unlock) {\n      return text ? `${text}%` : '0%';\n    }\n\n    return '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col\",\n    style: {\n      height: \"300px\",\n      alignContent: \"top\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        color: '#A5ACCB',\n        textAlign: 'center',\n        backgroundColor: '#1f2748',\n        borderLeftRightRadius: \"4px\",\n        borderTopRightRadius: \"15px\",\n        borderBottomLeftRadius: \"15px\",\n        borderBottomRightRadius: \"15px\",\n        height: \"300px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        style: {\n          color: 'white'\n        },\n        id: donutChartId,\n        children: [customText, \" Last \", unlock ? months : 0, \" months\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center container\",\n          style: {\n            width: \"205px\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: unlock ? value : 0,\n            text: getValue(),\n            counterClockwise: counterClockwise,\n            strokeWidth: 13,\n            styles: buildStyles({\n              // Rotation of path and trail, in number of turns (0-1)\n              // rotation: 0.25,\n              // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n              strokeLinecap: 'round',\n              // Text size\n              textSize: '14px',\n              // Can specify path transition in more detail, or remove it entirely\n              // pathTransition: 'none',\n              // Colors\n              pathColor: pathColor,\n              textColor: 'white',\n              trailColor: trailColor\n              /*backgroundColor: '#c300dc',*/\n\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), !unlock && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-background-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: lockOpen,\n            alt: \"lock-open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            style: {\n              margin: '10px 15px 0px 15px'\n            },\n            children: \"Subscribe to Study to see your statistic every day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = CircularProgressbarComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CircularProgressbarComponent\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Dashboard/CircularProgressbarComponent.jsx"],"names":["React","CircularProgressbar","buildStyles","CircularProgressbarComponent","title","value","text","counterClockwise","months","pathColor","trailColor","unlock","donutChartId","customText","getValue","height","alignContent","color","textAlign","backgroundColor","borderLeftRightRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","width","strokeLinecap","textSize","textColor","lockOpen","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport lockOpen from '../Styleguide/icons/basic-lock-open.svg'\n\n\nexport const CircularProgressbarComponent = ({\n    title,\n    value,\n    text,\n    counterClockwise,\n    months,\n    pathColor,\n    trailColor,\n    unlock,\n    donutChartId,\n    customText\n}) => {\n\n    const getValue = () => {\n        if(unlock) {\n            return text ? `${text}%` : '0%' \n        }\n        return ''\n    }\n\n    return (\n        <div className='col' style={{height: \"300px\", alignContent: \"top\"}}>\n            <div\n                className='card'\n                style={{\n                    color: '#A5ACCB',\n                    textAlign: 'center',\n                    backgroundColor: '#1f2748',\n                    borderLeftRightRadius: \"4px\",\n                    borderTopRightRadius: \"15px\",\n                    borderBottomLeftRadius: \"15px\",\n                    borderBottomRightRadius: \"15px\",\n                    height: \"300px\"\n\n                }}\n            >\n                <br />\n                <h5 className='card-title' style={{ color: 'white' }} id={donutChartId}>\n                    {customText} Last {unlock ? months : 0} months\n                </h5>\n                <p className='card-text'>{title}</p>\n                <div className='card-body'>\n                    <div\n                        className='d-flex justify-content-center container'\n                        style={{ width: \"205px\", height: \"100%\" }}\n                    >\n                        <CircularProgressbar\n                            value={unlock ? value : 0}\n                            text={getValue()}\n                            counterClockwise={counterClockwise}\n                            strokeWidth={13}\n                            styles={buildStyles({\n                                // Rotation of path and trail, in number of turns (0-1)\n                                // rotation: 0.25,\n                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                strokeLinecap: 'round',\n                                // Text size\n                                textSize: '14px',\n                                // Can specify path transition in more detail, or remove it entirely\n                                // pathTransition: 'none',\n                                // Colors\n                                pathColor: pathColor,\n                                textColor: 'white',\n                                trailColor: trailColor,\n                                /*backgroundColor: '#c300dc',*/\n                            })}\n                        />\n                    </div>\n                    <br/>\n                </div>\n                {!unlock && <div className='chart-background'>\n                    <div className=\"chart-background-content\">\n                        <img src={lockOpen} alt=\"lock-open\" />\n                        <small style={{margin: '10px 15px 0px 15px'}}>Subscribe to Study to see your statistic every day</small>\n                    </div>\n                </div>}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}