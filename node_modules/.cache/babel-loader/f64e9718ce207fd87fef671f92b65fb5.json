{"ast":null,"code":"import _slicedToArray from\"/home/mspl/Desktop/peerformance_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import roundedArrow from\"../Styleguide/icons/rounded-arrow.svg\";import greenCheck from\"../Styleguide/icons/green-check.svg\";import leftArrow from\"../Styleguide/icons/left-arrow.svg\";import crossIcon from\"../Styleguide/x.svg\";import{getMonthName,getCurrentMonth}from'../Utils/dashboard';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddDataPercentageType=function AddDataPercentageType(_ref){var handleClose=_ref.handleClose,addData=_ref.addData;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentMonthValue=_useState2[0],setCurrentMonthValue=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),oneMonthAgoValue=_useState4[0],setOneMonthAgoValue=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),twoMonthAgoValue=_useState6[0],setTwoMonthAgoValue=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),threeMonthAgoValue=_useState8[0],setThreeMonthAgoValue=_useState8[1];var threeMonthsAverage=(parseFloat(oneMonthAgoValue)+parseFloat(twoMonthAgoValue)+parseFloat(threeMonthAgoValue))/3;var submissionValue=currentMonthValue&&oneMonthAgoValue&&twoMonthAgoValue&&threeMonthAgoValue?((currentMonthValue-threeMonthsAverage)/threeMonthsAverage*100).toFixed(2):'';var validateValue=function validateValue(value,setValue){if(!isNaN(value)){setValue(value);}};var addPercentageData=function addPercentageData(e){e.preventDefault();addData(submissionValue);};return/*#__PURE__*/_jsx(\"form\",{noValidate:true,onSubmit:addPercentageData,children:/*#__PURE__*/_jsxs(\"div\",{className:\"add-data-popup-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-data-popup-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-data-popup-header-left\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"title\",children:\"Result Calculator\"}),/*#__PURE__*/_jsx(\"span\",{className:\"description\",children:\"Calculate a percentage applied to the users data submission\"})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:crossIcon,alt:\"x\",className:\"cross\",onClick:handleClose})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-data-popup-content-third-type\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"group-inputs-row\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"add-data-popup-content-label\",children:[/*#__PURE__*/_jsx(\"span\",{children:getMonthName(getCurrentMonth(0))}),/*#__PURE__*/_jsx(\"span\",{className:\"add-data-popup-content-label-right\",children:\"Current Month\"})]}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-2\",type:\"text\",id:\"currentMonth\",name:\"currentMonth\",value:currentMonthValue?currentMonthValue:'',onChange:function onChange(e){return validateValue(e.target.value,setCurrentMonthValue);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-data-popup-content-label\",children:/*#__PURE__*/_jsx(\"span\",{children:getMonthName(getCurrentMonth(2))})}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-2\",type:\"text\",id:\"twoMonthAgo\",name:\"twoMonthAgo\",value:twoMonthAgoValue?twoMonthAgoValue:'',onChange:function onChange(e){return validateValue(e.target.value,setTwoMonthAgoValue);},required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"group-inputs-row mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-data-popup-content-label\",children:/*#__PURE__*/_jsx(\"span\",{children:getMonthName(getCurrentMonth(1))})}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-2\",type:\"text\",id:\"oneMonthAgo\",name:\"oneMonthAgo\",value:oneMonthAgoValue?oneMonthAgoValue:'',onChange:function onChange(e){return validateValue(e.target.value,setOneMonthAgoValue);},required:true})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'45%'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"add-data-popup-content-label\",children:/*#__PURE__*/_jsx(\"span\",{children:getMonthName(getCurrentMonth(3))})}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control mt-2\",type:\"text\",id:\"threeMonthAgo\",name:\"threeMonthAgo\",value:threeMonthAgoValue?threeMonthAgoValue:'',onChange:function onChange(e){return validateValue(e.target.value,setThreeMonthAgoValue);},required:true})]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"red-message\",children:\"Figures entered above will not be shared with Peerformance \"}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons-row\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"add-data-submit-btn\",type:\"submit\",disabled:!submissionValue,children:[/*#__PURE__*/_jsx(\"img\",{src:roundedArrow,alt:\"rounded-arrow\"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:\"Add to Submission\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"add-data-counter\",children:submissionValue?\"\".concat(submissionValue,\"%\"):''})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-data-footer\",children:[/*#__PURE__*/_jsx(\"img\",{src:greenCheck,alt:\"check\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Save date on device for future use\"})]})]})]})});};export default AddDataPercentageType;","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Dashboard/AddDataPercentageType.jsx"],"names":["React","useState","getMonthName","getCurrentMonth","AddDataPercentageType","handleClose","addData","currentMonthValue","setCurrentMonthValue","oneMonthAgoValue","setOneMonthAgoValue","twoMonthAgoValue","setTwoMonthAgoValue","threeMonthAgoValue","setThreeMonthAgoValue","threeMonthsAverage","parseFloat","submissionValue","toFixed","validateValue","value","setValue","isNaN","addPercentageData","e","preventDefault","crossIcon","width","target","roundedArrow","greenCheck"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport roundedArrow from '../Styleguide/icons/rounded-arrow.svg';\nimport greenCheck from '../Styleguide/icons/green-check.svg';\nimport leftArrow from '../Styleguide/icons/left-arrow.svg';\nimport crossIcon from '../Styleguide/x.svg';\nimport { getMonthName, getCurrentMonth } from '../Utils/dashboard';\n\n\n const AddDataPercentageType = ({handleClose, addData}) => {\n\n    const [currentMonthValue, setCurrentMonthValue] = useState(0);\n    const [oneMonthAgoValue, setOneMonthAgoValue] = useState(0);\n    const [twoMonthAgoValue, setTwoMonthAgoValue] = useState(0);\n    const [threeMonthAgoValue, setThreeMonthAgoValue] = useState(0);\n    const threeMonthsAverage = (parseFloat(oneMonthAgoValue) + parseFloat(twoMonthAgoValue) + parseFloat(threeMonthAgoValue))/3;\n    const submissionValue = currentMonthValue && oneMonthAgoValue && twoMonthAgoValue && threeMonthAgoValue ? ((currentMonthValue - threeMonthsAverage)/threeMonthsAverage * 100).toFixed(2) : '';\n\n    const validateValue = (value, setValue) => {\n        if(!isNaN(value)) {\n            setValue(value);\n        }\n    }\n\n    const addPercentageData = e => {\n        e.preventDefault();\n        addData(submissionValue);\n    }\n\n    return (\n        <form noValidate onSubmit={addPercentageData}>\n            <div className=\"add-data-popup-container\">\n                <div className=\"add-data-popup-header\">\n                    <div className=\"add-data-popup-header-left\">\n                        <div>\n                            <span className='title'>Result Calculator</span>\n                            <span className='description'>Calculate a percentage applied to the users data submission</span>\n                        </div>\n                    </div>\n                    <div>\n                        <img src={crossIcon} alt=\"x\" className=\"cross\" onClick={handleClose} />\n                    </div>\n                </div>\n                <div className=\"add-data-popup-content-third-type\">\n                    <div className=\"group-inputs-row\">\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(0))}</span>\n                                <span className=\"add-data-popup-content-label-right\">Current Month</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='currentMonth'\n                                name='currentMonth'\n                                value={currentMonthValue ? currentMonthValue : ''}\n                                onChange={e => validateValue(e.target.value, setCurrentMonthValue)}\n                                required\n                            />\n                        </div>\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(2))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='twoMonthAgo'\n                                name='twoMonthAgo'\n                                value={twoMonthAgoValue ? twoMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setTwoMonthAgoValue)}\n                                required\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"group-inputs-row mt-3\">\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(1))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='oneMonthAgo'\n                                name='oneMonthAgo'\n                                value={oneMonthAgoValue ? oneMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setOneMonthAgoValue)}\n                                required\n                            />\n                        </div>\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(3))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='threeMonthAgo'\n                                name='threeMonthAgo'\n                                value={threeMonthAgoValue ? threeMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setThreeMonthAgoValue)}\n                                required\n                            />\n                        </div>\n\n                    </div>\n\n                    <span className=\"red-message\">Figures entered above will not be shared with Peerformance </span>\n                    <div className=\"buttons-row\">\n                        <button className=\"add-data-submit-btn\" type='submit' disabled={!submissionValue}>\n                            <img src={roundedArrow} alt=\"rounded-arrow\" /> <span>Add to Submission</span>\n                        </button>\n                        <div className=\"add-data-counter\">{submissionValue ? `${submissionValue}%` : ''}</div>\n                    </div>\n                    <div className=\"add-data-footer\">\n                        <img src={greenCheck} alt=\"check\" />\n                        <span>Save date on device for future use</span>\n                    </div>\n                </div>\n            </div>\n        </form>\n        \n    );\n}\n\nexport default AddDataPercentageType;"]},"metadata":{},"sourceType":"module"}