{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Signup/CompanyInformations.jsx\";\nimport React, { Component } from 'react';\nimport toast from 'react-hot-toast';\nimport * as fetches from './fetches';\nimport PeerformanceLogo from \"../assets/peerformance_logo.svg\";\nimport SecurityQuestionsPage from './components/SecurityQuestionsPage';\nimport SubmitPage from './components/SubmitPage';\nimport Notification from '../components/Notification';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CompanyInformations extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isAuth: undefined,\n      tokenError: null,\n      page: 1,\n      userEmail: '',\n      questionsForm: {\n        firstQuestion: {\n          value: ''\n        },\n        firstAnswer: {\n          value: '',\n          isValid: true\n        },\n        secondQuestion: {\n          value: ''\n        },\n        secondAnswer: {\n          value: '',\n          isValid: true\n        }\n      },\n      companyInfoForm: {\n        isFilled: false,\n        organizationId: null,\n        name: {\n          value: ''\n        },\n        numberOfEmployees: {\n          value: ''\n        },\n        annualRevenue: {\n          value: ''\n        },\n        reach: {\n          value: ''\n        },\n        authorizationContactEmail: {\n          value: '',\n          isValid: true\n        }\n      }\n    };\n\n    this.nextPage = () => this.setState({\n      page: 2\n    });\n\n    this.setIsAuth = isAuth => this.setState({\n      isAuth\n    });\n\n    this.setQuestionFormValue = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(state => ({\n        questionsForm: { ...state.questionsForm,\n          [name]: { ...state.questionsForm[name],\n            value: value\n          }\n        }\n      }));\n    };\n\n    this.setCompanyInfoFormValue = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState((state, _props) => ({\n        companyInfoForm: { ...state.companyInfoForm,\n          [name]: { ...state.companyInfoForm[name],\n            value: value\n          }\n        }\n      }));\n    };\n\n    this.setAuthorizationContactEmail = value => {\n      this.setState((state, _props) => ({\n        companyInfoForm: { ...state.companyInfoForm,\n          authorizationContactEmail: { ...state.companyInfoForm.authorizationContactEmail,\n            value: value\n          }\n        }\n      }));\n    };\n\n    this.onSubmit = async () => {\n      const userData = {\n        email: this.state.userEmail,\n        firstQuestion: parseInt(this.state.questionsForm.firstQuestion.value, 10),\n        firstAnswer: this.state.questionsForm.firstAnswer.value,\n        secondQuestion: parseInt(this.state.questionsForm.secondQuestion.value, 10),\n        secondAnswer: this.state.questionsForm.secondAnswer.value,\n        authorizationContactEmail: this.state.companyInfoForm.authorizationContactEmail.value\n      };\n\n      if (this.state.companyInfoForm.isFilled) {\n        const updatedUserData = Object.assign({\n          organizationId: this.state.companyInfoForm.organizationId\n        }, userData);\n\n        try {\n          const response = await fetches.createUser(updatedUserData);\n          toast.success(response.data.message, {\n            duration: 6000,\n            position: 'top-center'\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        const companyData = {\n          name: this.state.companyInfoForm.name.value,\n          numberOfEmployees: parseInt(this.state.companyInfoForm.numberOfEmployees.value, 10),\n          annualRevenue: parseInt(this.state.companyInfoForm.annualRevenue.value, 10),\n          reach: parseInt(this.state.companyInfoForm.reach.value, 10),\n          domain: this.state.userEmail.split('@')[1]\n        };\n        const updatedUserData = Object.assign({\n          organizationId: null\n        }, userData);\n\n        try {\n          const response = await fetches.createCompany(companyData);\n          updatedUserData.organizationId = response.data.organizationId;\n        } catch (error) {\n          console.log(error);\n        }\n\n        try {\n          const response = await fetches.createUser(updatedUserData);\n          toast.success(response.data.message, {\n            duration: 6000,\n            position: 'top-center'\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n\n      this.props.history.push('/');\n    };\n\n    this.handleRefreshToken = async () => {\n      await fetches.refreshToken(this.state.userEmail);\n      this.setState({\n        tokenError: null\n      });\n      toast.success('Activation link has been sent.', {\n        duration: 6000,\n        position: 'top-center'\n      });\n      this.props.history.push('/');\n    };\n  }\n\n  async componentDidMount() {\n    const search = this.props.location.search;\n    const params = new URLSearchParams(search);\n    const token = params.get('token');\n\n    if (token) {\n      try {\n        var _response$data, _response$data2;\n\n        const response = await fetches.checkToken(token);\n\n        if (response && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.tokenValid) {\n          this.setIsAuth(true);\n          const organizationData = response === null || response === void 0 ? void 0 : response.data.organization;\n\n          if (organizationData) {\n            this.setState({\n              companyInfoForm: { ...this.state.companyInfoForm,\n                isFilled: true,\n                organizationId: organizationData.id,\n                name: {\n                  value: organizationData.Name\n                },\n                numberOfEmployees: {\n                  value: organizationData.NumberOfEmployeesID\n                },\n                annualRevenue: {\n                  value: organizationData.AnnualRevenueID\n                },\n                reach: {\n                  value: organizationData.ReachID\n                }\n              }\n            });\n          }\n        } else {\n          this.setState({\n            isAuth: false,\n            tokenError: response.data.error\n          });\n        }\n\n        const userEmail = response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.email;\n        if (userEmail) this.setState({\n          userEmail\n        });\n      } catch (error) {\n        console.error('Token failed: ', error);\n        this.setIsAuth(false);\n      }\n    }\n  }\n\n  render() {\n    const {\n      questionsForm,\n      companyInfoForm,\n      isAuth,\n      tokenError\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5 col-sm-12 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            className: \"w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"w-50 mx-auto d-block mt-5\",\n              src: PeerformanceLogo,\n              alt: \"Peerformance Logo\",\n              width: \"263\",\n              height: \"121\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 8\n            }, this), isAuth !== undefined ? isAuth ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-3\",\n              children: this.state.page === 1 ? /*#__PURE__*/_jsxDEV(SecurityQuestionsPage, {\n                form: questionsForm,\n                onChange: this.setQuestionFormValue,\n                onNextButtonClick: this.nextPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 12\n              }, this) : /*#__PURE__*/_jsxDEV(SubmitPage, {\n                form: companyInfoForm,\n                onChange: this.setCompanyInfoFormValue,\n                onSubmit: this.onSubmit,\n                userEmail: this.state.userEmail,\n                setAuthorizationContactEmail: this.setAuthorizationContactEmail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 10\n            }, this) : tokenError ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning notification-message mt-4\",\n              role: \"alert\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [tokenError, \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 12\n                }, this), \"If you would like to renew the account creation process,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 12\n                }, this), \"click on this link\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-decoration-underline text-primary c-pointer\",\n                  onClick: this.handleRefreshToken,\n                  children: \"link\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 12\n                }, this), ' ', \"and check your e-mail address to complete the activation process.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 10\n            }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n              type: \"danger\",\n              message: \"Invalid token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 10\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(CompanyInformations);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Signup/CompanyInformations.jsx"],"names":["React","Component","toast","fetches","SecurityQuestionsPage","SubmitPage","Notification","withRouter","CompanyInformations","state","isAuth","undefined","tokenError","page","userEmail","questionsForm","firstQuestion","value","firstAnswer","isValid","secondQuestion","secondAnswer","companyInfoForm","isFilled","organizationId","name","numberOfEmployees","annualRevenue","reach","authorizationContactEmail","nextPage","setState","setIsAuth","setQuestionFormValue","e","target","setCompanyInfoFormValue","_props","setAuthorizationContactEmail","onSubmit","userData","email","parseInt","updatedUserData","Object","assign","response","createUser","success","data","message","duration","position","error","console","log","companyData","domain","split","createCompany","props","history","push","handleRefreshToken","refreshToken","componentDidMount","search","location","params","URLSearchParams","token","get","checkToken","tokenValid","organizationData","organization","id","Name","NumberOfEmployeesID","AnnualRevenueID","ReachID","render","PeerformanceLogo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport toast from 'react-hot-toast';\nimport * as fetches from './fetches';\nimport PeerformanceLogo from '../assets/peerformance_logo.svg';\nimport SecurityQuestionsPage from './components/SecurityQuestionsPage';\nimport SubmitPage from './components/SubmitPage';\nimport Notification from '../components/Notification';\nimport { withRouter } from 'react-router-dom';\n\nclass CompanyInformations extends Component {\n\tstate = {\n\t\tisAuth: undefined,\n\t\ttokenError: null,\n\t\tpage: 1,\n\t\tuserEmail: '',\n\t\tquestionsForm: {\n\t\t\tfirstQuestion: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tfirstAnswer: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: true,\n\t\t\t},\n\t\t\tsecondQuestion: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tsecondAnswer: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: true,\n\t\t\t},\n\t\t},\n\t\tcompanyInfoForm: {\n\t\t\tisFilled: false,\n\t\t\torganizationId: null,\n\t\t\tname: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tnumberOfEmployees: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tannualRevenue: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\treach: {\n\t\t\t\tvalue: '',\n\t\t\t},\n\t\t\tauthorizationContactEmail: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: true,\n\t\t\t},\n\t\t},\n\t};\n\n\tasync componentDidMount() {\n\t\tconst search = this.props.location.search;\n\t\tconst params = new URLSearchParams(search);\n\t\tconst token = params.get('token');\n\n\t\tif (token) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetches.checkToken(token);\n\n\t\t\t\tif (response && response.data?.tokenValid) {\n\t\t\t\t\tthis.setIsAuth(true);\n\n\t\t\t\t\tconst organizationData = response?.data.organization;\n\t\t\t\t\tif (organizationData) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcompanyInfoForm: {\n\t\t\t\t\t\t\t\t...this.state.companyInfoForm,\n\t\t\t\t\t\t\t\tisFilled: true,\n\t\t\t\t\t\t\t\torganizationId: organizationData.id,\n\t\t\t\t\t\t\t\tname: {\n\t\t\t\t\t\t\t\t\tvalue: organizationData.Name,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tnumberOfEmployees: {\n\t\t\t\t\t\t\t\t\tvalue: organizationData.NumberOfEmployeesID,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tannualRevenue: {\n\t\t\t\t\t\t\t\t\tvalue: organizationData.AnnualRevenueID,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treach: {\n\t\t\t\t\t\t\t\t\tvalue: organizationData.ReachID,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({ isAuth: false, tokenError: response.data.error });\n\t\t\t\t}\n\n\t\t\t\tconst userEmail = response?.data?.email;\n\t\t\t\tif (userEmail) this.setState({ userEmail });\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Token failed: ', error);\n\t\t\t\tthis.setIsAuth(false);\n\t\t\t}\n\t\t}\n\t}\n\n\tnextPage = () => this.setState({ page: 2 });\n\n\tsetIsAuth = (isAuth) => this.setState({ isAuth });\n\n\tsetQuestionFormValue = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tthis.setState((state) => ({\n\t\t\tquestionsForm: {\n\t\t\t\t...state.questionsForm,\n\t\t\t\t[name]: {\n\t\t\t\t\t...state.questionsForm[name],\n\t\t\t\t\tvalue: value,\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tsetCompanyInfoFormValue = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tthis.setState((state, _props) => ({\n\t\t\tcompanyInfoForm: {\n\t\t\t\t...state.companyInfoForm,\n\t\t\t\t[name]: {\n\t\t\t\t\t...state.companyInfoForm[name],\n\t\t\t\t\tvalue: value,\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tsetAuthorizationContactEmail = (value) => {\n\t\tthis.setState((state, _props) => ({\n\t\t\tcompanyInfoForm: {\n\t\t\t\t...state.companyInfoForm,\n\t\t\t\tauthorizationContactEmail: {\n\t\t\t\t\t...state.companyInfoForm.authorizationContactEmail,\n\t\t\t\t\tvalue: value,\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tonSubmit = async () => {\n\t\tconst userData = {\n\t\t\temail: this.state.userEmail,\n\t\t\tfirstQuestion: parseInt(this.state.questionsForm.firstQuestion.value, 10),\n\t\t\tfirstAnswer: this.state.questionsForm.firstAnswer.value,\n\t\t\tsecondQuestion: parseInt(this.state.questionsForm.secondQuestion.value, 10),\n\t\t\tsecondAnswer: this.state.questionsForm.secondAnswer.value,\n\t\t\tauthorizationContactEmail: this.state.companyInfoForm.authorizationContactEmail.value,\n\t\t};\n\n\t\tif (this.state.companyInfoForm.isFilled) {\n\t\t\tconst updatedUserData = Object.assign(\n\t\t\t\t{ organizationId: this.state.companyInfoForm.organizationId },\n\t\t\t\tuserData\n\t\t\t);\n\t\t\ttry {\n\t\t\t\tconst response = await fetches.createUser(updatedUserData);\n\t\t\t\ttoast.success(response.data.message, {\n\t\t\t\t\tduration: 6000,\n\t\t\t\t\tposition: 'top-center',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t} else {\n\t\t\tconst companyData = {\n\t\t\t\tname: this.state.companyInfoForm.name.value,\n\t\t\t\tnumberOfEmployees: parseInt(this.state.companyInfoForm.numberOfEmployees.value, 10),\n\t\t\t\tannualRevenue: parseInt(this.state.companyInfoForm.annualRevenue.value, 10),\n\t\t\t\treach: parseInt(this.state.companyInfoForm.reach.value, 10),\n\t\t\t\tdomain: this.state.userEmail.split('@')[1],\n\t\t\t};\n\n\t\t\tconst updatedUserData = Object.assign({ organizationId: null }, userData);\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetches.createCompany(companyData);\n\t\t\t\tupdatedUserData.organizationId = response.data.organizationId;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetches.createUser(updatedUserData);\n\t\t\t\ttoast.success(response.data.message, {\n\t\t\t\t\tduration: 6000,\n\t\t\t\t\tposition: 'top-center',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\n\t\tthis.props.history.push('/');\n\t};\n\n\thandleRefreshToken = async () => {\n\t\tawait fetches.refreshToken(this.state.userEmail);\n\t\tthis.setState({ tokenError: null });\n\t\ttoast.success('Activation link has been sent.', {\n\t\t\tduration: 6000,\n\t\t\tposition: 'top-center',\n\t\t});\n\t\tthis.props.history.push('/');\n\t};\n\n\trender() {\n\t\tconst { questionsForm, companyInfoForm, isAuth, tokenError } = this.state;\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-md-5 col-sm-12 mx-auto'>\n\t\t\t\t\t\t<form noValidate className='w-100'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName='w-50 mx-auto d-block mt-5'\n\t\t\t\t\t\t\t\tsrc={PeerformanceLogo}\n\t\t\t\t\t\t\t\talt='Peerformance Logo'\n\t\t\t\t\t\t\t\twidth='263'\n\t\t\t\t\t\t\t\theight='121'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t{isAuth !== undefined ? (\n\t\t\t\t\t\t\t\tisAuth ? (\n\t\t\t\t\t\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t\t\t\t\t\t{this.state.page === 1 ? (\n\t\t\t\t\t\t\t\t\t\t\t<SecurityQuestionsPage\n\t\t\t\t\t\t\t\t\t\t\t\tform={questionsForm}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setQuestionFormValue}\n\t\t\t\t\t\t\t\t\t\t\t\tonNextButtonClick={this.nextPage}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<SubmitPage\n\t\t\t\t\t\t\t\t\t\t\t\tform={companyInfoForm}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.setCompanyInfoFormValue}\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\t\t\t\t\t\t\tuserEmail={this.state.userEmail}\n\t\t\t\t\t\t\t\t\t\t\t\tsetAuthorizationContactEmail={\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setAuthorizationContactEmail\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : tokenError ? (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName='alert alert-warning notification-message mt-4'\n\t\t\t\t\t\t\t\t\t\trole='alert'\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t{tokenError}.\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\tIf you would like to renew the account creation process,\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\tclick on this link{' '}\n\t\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='text-decoration-underline text-primary c-pointer'\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.handleRefreshToken}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tlink\n\t\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t\tand check your e-mail address to complete the activation\n\t\t\t\t\t\t\t\t\t\t\tprocess.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Notification type='danger' message='Invalid token' />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(CompanyInformations);\n"]},"metadata":{},"sourceType":"module"}