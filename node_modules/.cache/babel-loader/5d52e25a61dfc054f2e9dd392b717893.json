{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/MainCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { Doughnut } from 'react-chartjs-2';\nimport { LineChart, LockedLineChart } from '../src/chart/line';\nimport AddDataPopUp from \"./AddDataPopup\";\nimport hierarchy from \"./Styleguide/hierarchy.svg\";\nimport mapPin from \"./Styleguide/map-pin.svg\";\nimport fakeImage3 from \"./Styleguide/fake_dashboard_3.svg\";\nimport users from \"./Styleguide/users.svg\";\nimport { getRegionDescription, checkSubscription } from './Utils/dashboard';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SubscribeToStudy from './Dashboard/SubscribeToStudy';\nimport { getParticipantBreakdown, subscribeStudy } from './store/dashboardActions';\nimport ProgressBarComponent from './Dashboard/components/ProgressBarComponent';\nimport { Participant_breakdown } from './Dashboard/Participant_breakdown';\nimport { CircularProgressbarComponent } from './Dashboard/CircularProgressbarComponent';\nimport { getMonthName } from './Utils/dashboard';\nimport BrowseCategory from \"./BrowseCategory\";\nimport Regions from \"./Regions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainCard() {\n  _s();\n\n  var _user$Company, _user$Company2;\n\n  const activeStudy = useSelector(state => state.dashboard.activeStudy);\n  const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n  const user = useSelector(state => state.dashboard.userInfo);\n  const studyData = useSelector(state => state.dashboard.studyData);\n  const participantData = useSelector(state => state.dashboard.participantBreakDown);\n  const isSubscriber = checkSubscription(activeStudy, userSubscriptions);\n  const [modalShow, setModalShow] = React.useState(false);\n  const regions = useSelector(state => state.dashboard.regions);\n  const [regionModalShow, setRegionModalShow] = React.useState(false);\n  let getPeerGroup4or5State = sessionStorage.getItem(\"fetchedLevel4\");\n  let getPeerGroup6State = sessionStorage.getItem(\"fetchedLevel6\");\n  let getRegionName = sessionStorage.getItem(\"regionName\");\n  const dispatch = useDispatch();\n\n  const onSubscribeStudy = () => {\n    dispatch(subscribeStudy(activeStudy.ID)); // dispatch(getParticipantBreakdown(activeStudy.ID));\n  };\n\n  const getChartTypeTitle = typeId => {\n    switch (typeId) {\n      case 1:\n        return 'Monthly Percentage Change';\n\n      case 2:\n        return 'Monthly Producer Average';\n\n      case 3:\n        return 'Absolute Monthly Change';\n\n      default:\n        return null;\n    }\n  };\n\n  const getSum = (total, num) => {\n    return total + num.Value / 100 * total;\n  };\n\n  const getSumAverage = (total, num) => {\n    return total + num.Average / 100 * total;\n  };\n\n  const countCircleResult = () => {\n    if ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 3 || (activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 2) {\n      var _studyData$, _studyData;\n\n      const firstValue = studyData && studyData.length ? (_studyData$ = studyData[0]) === null || _studyData$ === void 0 ? void 0 : _studyData$.Value : 0;\n      const mostRecentValue = studyData && studyData.length ? (_studyData = studyData[studyData.length - 1]) === null || _studyData === void 0 ? void 0 : _studyData.Value : 0;\n\n      if (firstValue && mostRecentValue) {\n        let calculateValue = mostRecentValue / firstValue * 100 - 100;\n        return parseFloat(calculateValue === null || calculateValue === void 0 ? void 0 : calculateValue.toFixed(2));\n      }\n\n      return 0;\n    } else if ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1) {\n      var _sum;\n\n      let sum = studyData === null || studyData === void 0 ? void 0 : studyData.reduce(getSum, 100);\n      let toString = JSON.stringify(studyData);\n\n      if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n        sum = 0;\n      }\n\n      return parseFloat((_sum = sum) === null || _sum === void 0 ? void 0 : _sum.toFixed(2));\n    }\n\n    if ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1 && studyData.length === 0) {\n      return 0;\n    }\n\n    return 0;\n  };\n\n  const countCircleAverageResult = () => {\n    if ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 3 || (activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 2) {\n      var _studyData$2, _studyData2;\n\n      const firstValue = studyData && studyData.length ? (_studyData$2 = studyData[0]) === null || _studyData$2 === void 0 ? void 0 : _studyData$2.Average : 0;\n      const mostRecentValue = studyData && studyData.length ? (_studyData2 = studyData[studyData.length - 1]) === null || _studyData2 === void 0 ? void 0 : _studyData2.Average : 0;\n\n      if (firstValue && mostRecentValue) {\n        let calculateValue = mostRecentValue / firstValue * 100 - 100;\n        return parseFloat(calculateValue === null || calculateValue === void 0 ? void 0 : calculateValue.toFixed(2));\n      }\n\n      return 0;\n    } else if ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1) {\n      var _sum2;\n\n      let sum = studyData === null || studyData === void 0 ? void 0 : studyData.reduce(getSumAverage, 100);\n      let toString = JSON.stringify(studyData);\n\n      if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n        sum = 0;\n      }\n\n      return parseFloat((_sum2 = sum) === null || _sum2 === void 0 ? void 0 : _sum2.toFixed(2));\n    }\n\n    return 0;\n  };\n\n  const getCircularProgressBarAverageValue = () => {\n    if (circleResult > 100 || circleAverageResult > 100) {\n      if (circleResult > circleAverageResult) {\n        return circleAverageResult / circleResult * 100;\n      } else {\n        return 100;\n      }\n    }\n\n    return Math.abs(circleAverageResult);\n  };\n\n  const getCircularProgressBarValue = () => {\n    if (circleResult > 100 || circleAverageResult > 100) {\n      if (circleResult > circleAverageResult) {\n        return 100;\n      } else {\n        return circleResult / circleAverageResult * 100;\n      }\n    }\n\n    return Math.abs(circleResult);\n  };\n\n  const getUserLastMonthValue = () => {\n    const typeId = activeStudy.TypeID;\n    const lastStudyDataResult = studyData && studyData[(studyData === null || studyData === void 0 ? void 0 : studyData.length) - 1];\n    const value = (lastStudyDataResult === null || lastStudyDataResult === void 0 ? void 0 : lastStudyDataResult.Value) || 0;\n    const average = (lastStudyDataResult === null || lastStudyDataResult === void 0 ? void 0 : lastStudyDataResult.Average) || 0;\n\n    if (value && average) {\n      if (typeId === 1) {\n        const absoluteValue = Math.abs(value);\n        const absoluteAverage = Math.abs(average);\n\n        if (absoluteValue > 100 || absoluteAverage > 100) {\n          const scale = Math.max(absoluteValue, absoluteAverage);\n          return value / scale * 100;\n        } else {\n          return value;\n        }\n      } else {\n        const scale = Math.max(value, average);\n        return value / scale * 100;\n      }\n    } else {\n      return 0;\n    }\n  };\n\n  const getAverageLastMonthValue = () => {\n    const typeId = activeStudy.TypeID;\n    const lastStudyDataResult = studyData && studyData[(studyData === null || studyData === void 0 ? void 0 : studyData.length) - 1];\n    const value = (lastStudyDataResult === null || lastStudyDataResult === void 0 ? void 0 : lastStudyDataResult.Value) || 0;\n    const average = (lastStudyDataResult === null || lastStudyDataResult === void 0 ? void 0 : lastStudyDataResult.Average) || 0;\n\n    if (value && average) {\n      if (typeId === 1) {\n        const absoluteValue = Math.abs(value);\n        const absoluteAverage = Math.abs(average);\n\n        if (absoluteValue > 100 || absoluteAverage > 100) {\n          const scale = Math.max(absoluteValue, absoluteAverage);\n          return average / scale * 100;\n        } else {\n          return average;\n        }\n      } else {\n        const scale = Math.max(value, average);\n        return average / scale * 100;\n      }\n    } else {\n      return 0;\n    }\n  };\n\n  const circleAverageResult = Math.round(countCircleAverageResult());\n  const circleResult = Math.round(countCircleResult());\n  let regionName = sessionStorage.getItem(\"regionName\");\n\n  if (regionName !== null && document.getElementById(\"regionTxt\")) {\n    document.getElementById(\"regionTxt\").innerHTML = regionName;\n  }\n\n  const regionClicked = () => {\n    setRegionModalShow(true);\n  }; // This function will display the month on th chart\n\n\n  let displayMonth;\n\n  const displayMonth1 = () => {\n    let date = new Date().getDate();\n\n    if (date > 5) {\n      displayMonth = getMonthName(new Date().getMonth() - 1);\n    } else {\n      displayMonth = getMonthName(new Date().getMonth() - 2);\n    }\n  };\n\n  displayMonth1();\n  return activeStudy ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm\",\n    style: {\n      color: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Regions, {\n      show: regionModalShow,\n      onHide: () => setRegionModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0px'\n      },\n      className: \"row col-sm-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-8\",\n        style: {\n          marginTop: \"-10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            fontSize: '18px',\n            color: '#8F96B4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hierarchy,\n              alt: \"\",\n              onClick: () => setModalShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '3px'\n              },\n              onClick: () => setModalShow(true),\n              id: \"peerGroupText\",\n              children: `${activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.ParentCategory}, ${activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.Category}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BrowseCategory, {\n              show: modalShow,\n              onHide: () => setModalShow(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '15px',\n              marginRight: '15px'\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                marginRight: '3px'\n              },\n              src: mapPin,\n              onClick: regionClicked,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: regionClicked,\n              id: \"regionName\",\n              children: getRegionDescription(activeStudy, regions)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: \"#FFFFFF\",\n              fontSize: '30px'\n            },\n            children: [activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.Name, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: users,\n              style: {\n                paddingLeft: \"20px\"\n              },\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                fontSize: \"14px\",\n                color: '#8F96B4'\n              },\n              children: [\" \", activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.NumOfSubscribers]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-4\",\n        children: isSubscriber ? /*#__PURE__*/_jsxDEV(AddDataPopUp, {\n          type: activeStudy.TypeID,\n          className: \"input-group-sm float-end\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-7\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              color: '#A5ACCB',\n              backgroundColor: '#1f2748',\n              borderTopRightRadius: \"15px\",\n              borderTopLeftRadius: \"15px\",\n              borderBottomLeftRadius: \"15px\",\n              borderBottomRightRadius: \"15px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [getChartTypeTitle(activeStudy.TypeID), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-sm-12\",\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                      style: {\n                        color: 'white'\n                      },\n                      children: [\" \", displayMonth]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n                data: studyData,\n                name: user === null || user === void 0 ? void 0 : (_user$Company = user.Company) === null || _user$Company === void 0 ? void 0 : _user$Company.name,\n                subscription: isSubscriber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), isSubscriber ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container col-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              style: {\n                color: '#A5ACCB'\n              },\n              children: \" ABOUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: '#A5ACCB'\n              },\n              children: activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"2%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#A5ACCB'\n              },\n              children: user === null || user === void 0 ? void 0 : (_user$Company2 = user.Company) === null || _user$Company2 === void 0 ? void 0 : _user$Company2.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: \"3px\"\n              },\n              children: `${studyData && studyData.length && ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1 ? Math.round(studyData[studyData.length - 1].Value) : studyData[studyData.length - 1].Value)}\n                                    \n                                 \n                                    \n                                    ${(activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1 ? '%' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBarComponent, {\n              id: \"user-progres-bar\",\n              value: getUserLastMonthValue()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                paddingTop: \"5%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                color: '#A5ACCB'\n              },\n              children: \"Industry Average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: \"3px\",\n                verticalAlign: \"bottom\"\n              },\n              children: `${studyData && studyData.length && ((activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1 ? Math.round(studyData[studyData.length - 1].Average) : studyData[studyData.length - 1].Average)}\n                                    ${(activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.TypeID) === 1 ? '%' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ProgressBarComponent, {\n              id: \"industry-progres-bar\",\n              value: getAverageLastMonthValue()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 29\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(SubscribeToStudy, {\n          studyAbout: activeStudy === null || activeStudy === void 0 ? void 0 : activeStudy.About,\n          onSubscribe: onSubscribeStudy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: \"17px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(Participant_breakdown, {\n          data: participantData,\n          unlock: isSubscriber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressbarComponent, {\n          value: getCircularProgressBarValue(),\n          text: circleResult,\n          counterClockwise: circleResult < 0 ? true : false,\n          months: studyData === null || studyData === void 0 ? void 0 : studyData.length,\n          pathColor: 'rgba(0, 226, 125)',\n          trailColor: circleResult < 0 ? '#553b65' : '#353b65',\n          title: \"Change from start of this period\",\n          unlock: isSubscriber,\n          donutChartId: \"donutChart1\",\n          customText: \"Your\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressbarComponent, {\n          value: getCircularProgressBarAverageValue(),\n          text: circleAverageResult,\n          counterClockwise: circleAverageResult < 0 ? true : false,\n          months: studyData === null || studyData === void 0 ? void 0 : studyData.length,\n          pathColor: 'rgba(101,133,255)',\n          trailColor: circleAverageResult < 0 ? '#553b65' : '#353b65',\n          title: \"Change from start of this period\",\n          unlock: isSubscriber,\n          donutChartId: \"donutChart2\",\n          customText: \"Peer Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 23\n  }, this)\n  /* If the study is not activated*/\n  : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-sm\",\n    style: {\n      color: 'white'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '0px'\n      },\n      className: \"row col-sm-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-8\",\n        style: {\n          marginTop: \"-10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            fontSize: '18px',\n            color: '#8F96B4'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: hierarchy,\n              alt: \"\",\n              onClick: () => setModalShow(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"peerGroupTitle\",\n              style: {\n                marginLeft: '3px'\n              },\n              onClick: () => setModalShow(true),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"level5Text\",\n                children: [\" \", getPeerGroup4or5State, \", \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"level6Text\",\n                children: getPeerGroup6State\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(BrowseCategory, {\n              show: modalShow,\n              onHide: () => setModalShow(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '15px',\n              marginRight: '15px'\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                marginRight: '3px'\n              },\n              src: mapPin,\n              onClick: () => setRegionModalShow(true),\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"regionTxt\",\n              onClick: () => setRegionModalShow(true),\n              children: getRegionName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Regions, {\n              show: regionModalShow,\n              onHide: () => setRegionModalShow(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            fontSize: '18px',\n            color: '#8F96B4',\n            marginLeft: \"-23.52px\",\n            width: \"1230px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"20px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                borderLeft: \"2px solid #313B65\",\n                marginTop: \"740px\",\n                marginLeft: \"-1px\",\n                height: \"350px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fakeImage3,\n            style: {\n              marginLeft: \"10px\",\n              width: \"1230px\"\n            },\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 15\n  }, this);\n}\n\n_s(MainCard, \"cEEWIkOLQKtnR3lCtJAImD5XtZk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = MainCard;\nexport default MainCard;\n/*\n\n* */\n\nvar _c;\n\n$RefreshReg$(_c, \"MainCard\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/MainCard.js"],"names":["React","useState","CircularProgressbar","buildStyles","Doughnut","LineChart","LockedLineChart","AddDataPopUp","getRegionDescription","checkSubscription","useSelector","useDispatch","SubscribeToStudy","getParticipantBreakdown","subscribeStudy","ProgressBarComponent","Participant_breakdown","CircularProgressbarComponent","getMonthName","BrowseCategory","Regions","MainCard","activeStudy","state","dashboard","userSubscriptions","user","userInfo","studyData","participantData","participantBreakDown","isSubscriber","modalShow","setModalShow","regions","regionModalShow","setRegionModalShow","getPeerGroup4or5State","sessionStorage","getItem","getPeerGroup6State","getRegionName","dispatch","onSubscribeStudy","ID","getChartTypeTitle","typeId","getSum","total","num","Value","getSumAverage","Average","countCircleResult","TypeID","firstValue","length","mostRecentValue","calculateValue","parseFloat","toFixed","sum","reduce","toString","JSON","stringify","undefined","countCircleAverageResult","getCircularProgressBarAverageValue","circleResult","circleAverageResult","Math","abs","getCircularProgressBarValue","getUserLastMonthValue","lastStudyDataResult","value","average","absoluteValue","absoluteAverage","scale","max","getAverageLastMonthValue","round","regionName","document","getElementById","innerHTML","regionClicked","displayMonth","displayMonth1","date","Date","getDate","getMonth","color","marginBottom","marginTop","display","fontSize","hierarchy","marginLeft","ParentCategory","Category","marginRight","mapPin","Name","users","paddingLeft","NumOfSubscribers","padding","backgroundColor","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Company","name","About","paddingTop","verticalAlign","paddingBottom","width","borderLeft","height","fakeImage3"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {Doughnut} from 'react-chartjs-2';\nimport {LineChart, LockedLineChart} from '../src/chart/line';\nimport AddDataPopUp from \"./AddDataPopup\";\nimport hierarchy from \"./Styleguide/hierarchy.svg\"\nimport mapPin from \"./Styleguide/map-pin.svg\"\nimport fakeImage3 from \"./Styleguide/fake_dashboard_3.svg\"\nimport users from \"./Styleguide/users.svg\";\nimport {getRegionDescription, checkSubscription} from './Utils/dashboard';\nimport {useSelector, useDispatch} from 'react-redux';\nimport SubscribeToStudy from './Dashboard/SubscribeToStudy';\nimport {getParticipantBreakdown, subscribeStudy} from './store/dashboardActions';\nimport ProgressBarComponent from './Dashboard/components/ProgressBarComponent';\nimport {Participant_breakdown} from './Dashboard/Participant_breakdown';\nimport {CircularProgressbarComponent} from './Dashboard/CircularProgressbarComponent';\nimport {getMonthName} from './Utils/dashboard';\nimport BrowseCategory from \"./BrowseCategory\";\nimport Regions from \"./Regions\";\n\n\nfunction MainCard() {\n    const activeStudy = useSelector(state => state.dashboard.activeStudy);\n    const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n    const user = useSelector(state => state.dashboard.userInfo);\n\n    const studyData = useSelector(state => state.dashboard.studyData);\n    const participantData = useSelector(state => state.dashboard.participantBreakDown);\n\n    const isSubscriber = checkSubscription(activeStudy, userSubscriptions);\n\n    const [modalShow, setModalShow] = React.useState(false);\n    const regions = useSelector(state => state.dashboard.regions);\n    const [regionModalShow, setRegionModalShow] = React.useState(false);\n\n    let getPeerGroup4or5State = sessionStorage.getItem(\"fetchedLevel4\");\n    let getPeerGroup6State = sessionStorage.getItem(\"fetchedLevel6\");\n    let getRegionName = sessionStorage.getItem(\"regionName\");\n\n    const dispatch = useDispatch();\n    const onSubscribeStudy = () => {\n        dispatch(subscribeStudy(activeStudy.ID));\n        // dispatch(getParticipantBreakdown(activeStudy.ID));\n    };\n\n    const getChartTypeTitle = typeId => {\n        switch (typeId) {\n            case 1:\n                return 'Monthly Percentage Change';\n            case 2:\n                return 'Monthly Producer Average';\n            case 3:\n                return 'Absolute Monthly Change';\n            default:\n                return null;\n        }\n    }\n\n    const getSum = (total, num) => {\n        return total + (num.Value / 100) * total;\n    }\n\n    const getSumAverage = (total, num) => {\n        return total + (num.Average / 100) * total;\n    }\n\n    const countCircleResult = () => {\n\n        if (activeStudy?.TypeID === 3 || activeStudy?.TypeID === 2) {\n            const firstValue = studyData && studyData.length ? studyData[0]?.Value : 0;\n            const mostRecentValue = studyData && studyData.length ? studyData[studyData.length - 1]?.Value : 0;\n            if (firstValue && mostRecentValue) {\n                let calculateValue = (((mostRecentValue / firstValue) * 100) - 100);\n                return parseFloat(calculateValue?.toFixed(2));\n            }\n            return 0;\n        } else if (activeStudy?.TypeID === 1) {\n            let sum = studyData?.reduce(getSum, 100);\n            let toString = JSON.stringify(studyData);\n\n            if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n                sum = 0;\n            }\n            return parseFloat(sum?.toFixed(2));\n        }\n\n        if (activeStudy?.TypeID === 1 && studyData.length === 0) {\n            return 0;\n        }\n        return 0;\n    }\n\n    const countCircleAverageResult = () => {\n        if (activeStudy?.TypeID === 3 || activeStudy?.TypeID === 2) {\n            const firstValue = studyData && studyData.length ? studyData[0]?.Average : 0;\n            const mostRecentValue = studyData && studyData.length ? studyData[studyData.length - 1]?.Average : 0;\n            if (firstValue && mostRecentValue) {\n                let calculateValue = (((mostRecentValue / firstValue) * 100) - 100);\n                return parseFloat(calculateValue?.toFixed(2));\n            }\n            return 0;\n        } else if (activeStudy?.TypeID === 1) {\n            let sum = studyData?.reduce(getSumAverage, 100);\n\n            let toString = JSON.stringify(studyData);\n\n            if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n                sum = 0;\n            }\n\n            return parseFloat(sum?.toFixed(2));\n        }\n        return 0;\n    }\n\n    const getCircularProgressBarAverageValue = () => {\n        if (circleResult > 100 || circleAverageResult > 100) {\n            if (circleResult > circleAverageResult) {\n                return (circleAverageResult / circleResult) * 100;\n            } else {\n                return 100;\n            }\n        }\n\n        return Math.abs(circleAverageResult)\n    }\n\n    const getCircularProgressBarValue = () => {\n\n        if (circleResult > 100 || circleAverageResult > 100) {\n            if (circleResult > circleAverageResult) {\n                return 100;\n            } else {\n                return (circleResult / circleAverageResult) * 100;\n            }\n        }\n        return Math.abs(circleResult)\n    }\n\n    const getUserLastMonthValue = () => {\n        const typeId = activeStudy.TypeID;\n        const lastStudyDataResult = studyData && studyData[studyData?.length - 1];\n        const value = lastStudyDataResult?.Value || 0;\n        const average = lastStudyDataResult?.Average || 0;\n\n        if (value && average) {\n            if (typeId === 1) {\n                const absoluteValue = Math.abs(value);\n                const absoluteAverage = Math.abs(average);\n                if (absoluteValue > 100 || absoluteAverage > 100) {\n                    const scale = Math.max(absoluteValue, absoluteAverage);\n                    return (value / scale) * 100;\n                } else {\n                    return value;\n                }\n\n            } else {\n                const scale = Math.max(value, average);\n                return (value / scale) * 100;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    const getAverageLastMonthValue = () => {\n        const typeId = activeStudy.TypeID;\n        const lastStudyDataResult = studyData && studyData[studyData?.length - 1];\n        const value = lastStudyDataResult?.Value || 0;\n        const average = lastStudyDataResult?.Average || 0;\n\n        if (value && average) {\n            if (typeId === 1) {\n                const absoluteValue = Math.abs(value);\n                const absoluteAverage = Math.abs(average);\n                if (absoluteValue > 100 || absoluteAverage > 100) {\n                    const scale = Math.max(absoluteValue, absoluteAverage);\n                    return (average / scale) * 100;\n                } else {\n                    return average;\n                }\n            } else {\n                const scale = Math.max(value, average);\n                return (average / scale) * 100;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    const circleAverageResult = Math.round(countCircleAverageResult());\n    const circleResult = Math.round(countCircleResult());\n\n    let regionName = sessionStorage.getItem(\"regionName\");\n    if (regionName !== null && document.getElementById(\"regionTxt\")) {\n        document.getElementById(\"regionTxt\").innerHTML = regionName\n    }\n    const regionClicked = () => {\n        setRegionModalShow(true);\n    }\n\n    // This function will display the month on th chart\n    let displayMonth;\n    const displayMonth1 = () => {\n        let date = new Date().getDate();\n        if (date > 5) {\n            displayMonth = getMonthName(new Date().getMonth() - 1);\n        } else {\n            displayMonth = getMonthName(new Date().getMonth() - 2);\n        }\n    }\n    displayMonth1();\n\n    return (\n        activeStudy ? <div className=\"col-sm\"\n                           style={{\n                               color: 'white',\n\n                           }}>\n                <Regions show={regionModalShow} onHide={() => setRegionModalShow(false)}/>\n                <div style={{marginBottom: '0px'}} className=\"row col-sm-12\">\n                    <div className=\"col-sm-8\" style={{marginTop: \"-10px\"}}>\n                        <div style={{display: 'flex', fontSize: '18px', color: '#8F96B4'}}>\n                            <div style={{display: 'flex'}}>\n                                <img src={hierarchy} alt=\"\"\n                                     onClick={() => setModalShow(true)}\n                                />\n                            </div>\n\n                            <div>\n                                <span style={{marginLeft: '3px'}}\n                                      onClick={() => setModalShow(true)}\n                                      id=\"peerGroupText\"\n                                >{`${activeStudy?.ParentCategory}, ${activeStudy?.Category}`}\n                            </span>\n                                <BrowseCategory show={modalShow} onHide={() => setModalShow(false)}\n                                />\n                            </div>\n                            <div style={{marginLeft: '15px', marginRight: '15px'}}>-</div>\n                            <div style={{display: 'flex'}}>\n                                <img style={{marginRight: '3px'}}\n                                     src={mapPin}\n                                     onClick={regionClicked}\n                                     alt=\"\"/>\n\n                                <div onClick={regionClicked} id=\"regionName\">\n                                    {getRegionDescription(activeStudy, regions)}</div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <h3 style={{color: \"#FFFFFF\", fontSize: '30px'}}>\n                                {activeStudy?.Name}\n                                <img src={users} style={{paddingLeft: \"20px\"}} alt=\"\"/>\n                                <small style={{\n                                    fontSize: \"14px\",\n                                    color: '#8F96B4'\n                                }}> {activeStudy?.NumOfSubscribers}</small>\n                            </h3>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n\n                        {isSubscriber ?\n                            <AddDataPopUp type={activeStudy.TypeID} className=\"input-group-sm float-end\"/> : null}\n                    </div>\n                    <div style={{padding: \"4px\"}}></div>\n\n                </div>\n                <div>\n                    <div className='row col-sm-12'>\n                        <div className='col-sm-7'>\n                            <div className='card' style={{\n                                color: '#A5ACCB',\n                                backgroundColor: '#1f2748',\n                                borderTopRightRadius: \"15px\",\n                                borderTopLeftRadius: \"15px\",\n                                borderBottomLeftRadius: \"15px\",\n                                borderBottomRightRadius: \"15px\",\n                            }}>\n                                <div className='card-body'>\n                                    {getChartTypeTitle(activeStudy.TypeID)}\n\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <b><h5 style={{color: 'white'}}> {displayMonth}</h5>\n                                            </b>\n                                        </div>\n                                    </div>\n\n                                    {/*{isSubscriber ? <LineChart data={studyData} name={user?.Company?.name}/> :*/}\n                                    {/*    <LockedLineChart/>}*/}\n\n                                    <LineChart data={studyData} name={user?.Company?.name} subscription={isSubscriber}/>\n                                </div>\n                            </div>\n                        </div>\n                        {isSubscriber ? <>\n                            <div className='container col-sm'>\n                                <h6 style={{color: '#A5ACCB'}}> ABOUT</h6>\n                                <br/>\n                                <p style={{color: '#A5ACCB'}}>\n                                    {activeStudy?.About}\n                                </p>\n                                <div style={{paddingTop: \"2%\"}}></div>\n                                <small style={{color: '#A5ACCB'}}>{user?.Company?.name}</small>\n                                <p style={{marginBottom: \"3px\"}}>{`${\n                                    studyData &&\n                                    studyData.length &&\n                                    (activeStudy?.TypeID === 1 ? Math.round(studyData[studyData.length - 1].Value) : studyData[studyData.length - 1].Value)}\n                                    \n                                 \n                                    \n                                    ${activeStudy?.TypeID === 1 ? '%' : ''}`}</p>\n                                <ProgressBarComponent id=\"user-progres-bar\" value={getUserLastMonthValue()}/>\n\n                                <div style={{paddingTop: \"5%\"}}></div>\n                                <small style={{color: '#A5ACCB'}}>Industry Average</small>\n                                {/* <p color={{ color: \"white\" }}>{`-20%`}</p> */}\n                                <p style={{\n                                    marginBottom: \"3px\",\n                                    verticalAlign: \"bottom\"\n                                }}>{`${\n                                    studyData &&\n                                    studyData.length &&\n                                    (activeStudy?.TypeID === 1 ? Math.round(studyData[studyData.length - 1].Average) : studyData[studyData.length - 1].Average)}\n                                    ${activeStudy?.TypeID === 1 ? '%' : ''}`}</p>\n                                <ProgressBarComponent id=\"industry-progres-bar\" value={getAverageLastMonthValue()}/>\n\n\n                            </div>\n                        </> : <SubscribeToStudy studyAbout={activeStudy?.About} onSubscribe={onSubscribeStudy}/>}\n                    </div>\n                    <br/>\n                    <div style={{paddingBottom: \"17px\"}}></div>\n                    <div className='row col-sm-12'>\n\n                        {/*{isSubscriber ?*/}\n                        {/*    <Participant_breakdown data={participantData}/> : null}*/}\n\n                        <Participant_breakdown data={participantData} unlock={isSubscriber}/>\n\n                        {/* Circle 1*/}\n                        <CircularProgressbarComponent\n                            value={getCircularProgressBarValue()}\n                            text={circleResult}\n                            counterClockwise={circleResult < 0 ? true : false}\n                            months={studyData?.length}\n                            pathColor={'rgba(0, 226, 125)'}\n                            trailColor={circleResult < 0 ? '#553b65' : '#353b65'}\n                            title='Change from start of this period'\n                            unlock={isSubscriber}\n                            donutChartId=\"donutChart1\"\n                            customText=\"Your\"\n                        />\n                        {/* Circle 2*/}\n                        <CircularProgressbarComponent\n                            value={getCircularProgressBarAverageValue()}\n                            text={circleAverageResult}\n                            counterClockwise={circleAverageResult < 0 ? true : false}\n                            months={studyData?.length}\n                            pathColor={'rgba(101,133,255)'}\n                            trailColor={circleAverageResult < 0 ? '#553b65' : '#353b65'}\n                            title='Change from start of this period'\n                            unlock={isSubscriber}\n                            donutChartId=\"donutChart2\"\n                            customText=\"Peer Group\"\n                        />\n                    </div>\n                </div>\n            </div>\n            /* If the study is not activated*/\n            : <div className=\"col-sm\" style={{color: 'white',}}>\n                <div style={{marginBottom: '0px'}} className=\"row col-sm-12\">\n                    <div className=\"col-sm-8\" style={{marginTop: \"-10px\"}}>\n                        <div style={{display: 'flex', fontSize: '18px', color: '#8F96B4'}}>\n                            <div style={{display: 'flex'}}>\n                                <img src={hierarchy} alt=\"\"\n                                     onClick={() => setModalShow(true)}\n                                />\n                            </div>\n                            <div>\n                                <span id=\"peerGroupTitle\" style={{marginLeft: '3px'}}\n                                      onClick={() => setModalShow(true)}>\n                                    <span id=\"level5Text\"> {getPeerGroup4or5State}, </span>\n                                    <span id=\"level6Text\">{getPeerGroup6State}</span>\n\n                                </span>\n                                <BrowseCategory show={modalShow} onHide={() => setModalShow(false)}\n                                />\n                            </div>\n\n                            <div style={{marginLeft: '15px', marginRight: '15px'}}>-</div>\n                            <div style={{display: 'flex'}}>\n                                <img style={{marginRight: '3px'}}\n                                     src={mapPin}\n                                     onClick={() => setRegionModalShow(true)} alt=\"\"/>\n\n                                <div id=\"regionTxt\" onClick={() => setRegionModalShow(true)}>\n                                    {getRegionName}\n                                </div>\n                                <Regions show={regionModalShow} onHide={() => setRegionModalShow(false)}/>\n                            </div>\n                        </div>\n\n                        <div style={{\n                            display: 'flex', fontSize: '18px',\n                            color: '#8F96B4', marginLeft: \"-23.52px\",\n                            width: \"1230px\",\n                        }}>\n\n                            {/* Blue line*/}\n                            <div style={{width: \"20px\"}}>\n                                <div style={{\n                                    borderLeft: \"2px solid #313B65\",\n                                    marginTop: \"740px\",\n                                    marginLeft: \"-1px\",\n                                    height: \"350px\",\n                                }}/>\n                            </div>\n                            {/* Blue line*/}\n\n                            {/* Fake image */}\n                            <img\n                                src={fakeImage3}\n                                style={{marginLeft: \"10px\", width: \"1230px\"}}\n                                alt=\"\"/>\n                            {/* Fake image */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default MainCard;\n\n/*\n\n* */\n"]},"metadata":{},"sourceType":"module"}