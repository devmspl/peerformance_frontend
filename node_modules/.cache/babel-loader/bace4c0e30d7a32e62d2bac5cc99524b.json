{"ast":null,"code":"import axios from 'axios';\nimport { FaJediOrder } from \"react-icons/all\";\nexport const fetchRegions = async () => {\n  try {\n    const response = await axios.get('/regions', {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    console.log(\"This is what we received\" + response.data);\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchRegionChild = async parent => {\n  try {\n    const response = await axios.get(`/regions/${parent}/datapoint`, // const response = await axios.get(`/regions/2/datapoint`,\n    {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    console.log(\"This is the result 2:\" + response.data);\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Get the first three regions - All of UK, Europe, Global,\n\nexport const fetchTop3Level = async () => {\n  try {\n    const response = await axios.get('/regions/top3', {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    }); // set the top 3 levels\n\n    window.localStorage.setItem(\"top3Regions\", JSON.stringify(response.data));\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchUserInfo = async () => {\n  try {\n    const response = await axios.get('/users/info', {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    }); // we are setting a variable that the user has logged in\n\n    sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n    console.log(\"response.data\" + JSON.stringify(response.data));\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Get region by id - studyID, regionId\n\nexport const fetchStudyByRegion = async (peerGroupId, regionId) => {\n  try {\n    //let response = await axios.get(`/studies/16775/1`,\n    let response = await axios.get(`/studies/${peerGroupId}/${regionId}`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchStudies = async peerGroupId => {\n  try {\n    const response = await axios.get(`/studies/${peerGroupId}`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    console.log(\"This is the peer group id :\", peerGroupId);\n    console.log(\"This is the study:\", response.data);\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; //\n\nexport const fetchUserSubscriptions = async id => {\n  try {\n    const response = await axios.get(\"/users/subscriptions\", {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    console.log(\"response.data\" + JSON.stringify(response.data));\n    sessionStorage.setItem(\"userSubscription\", JSON.stringify(response.data));\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const addSubscription = async id => {\n  try {\n    const response = await axios.post(\"/users/subscriptions\", {\n      studyId: id\n    }, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchAddStudyData = async (value, studyId) => {\n  try {\n    const response = await axios.post(`/studydata/${studyId}/datapoint`, {\n      encryptedValue: value,\n      value: value\n    }, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchGetStudyData = async studyId => {\n  try {\n    const response = await axios.get(`/studydata/${studyId}/datapoint`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Update the sql user table with the user's last region\n\nexport const updateRegion = async regionID => {\n  try {\n    const response = await axios.put(\"/users/region\", {\n      regionID: regionID\n    }, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Update the sql user table with the user's last selected peer group\n\nexport const updatePeerGroup = async id => {\n  try {\n    const response = await axios.put(\"/users/peergroup\", {\n      peerGroupId: id\n    }, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchRegionById = async regionId => {\n  try {\n    const response = await axios.get(`/regions/${regionId}`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    sessionStorage.setItem(\"regionId\", response.data[0].ID);\n    sessionStorage.setItem(\"regionName\", response.data[0].Name);\n    sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};\nexport const fetchPeerGroup = async peerGroupId => {\n  try {\n    const response = await axios.get(`/peergroup/${peerGroupId}`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    sessionStorage.setItem(\"fetchedLevel4\", response.data[0].Category); // fine\n\n    sessionStorage.setItem(\"fetchedLevel6\", response.data[1].Category); // fine\n\n    sessionStorage.setItem(\"fetchedLevel4SIC\", response.data[0].sic); // fine\n\n    sessionStorage.setItem(\"fetchedLevel6SIC\", response.data[1].sic); // fine\n\n    sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Participant range data\n\nexport const fetchParticipantRange = async () => {\n  try {\n    const response = await axios.get(\"/getrange\", {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n}; // Participant get participant breakdown data\n\nexport const fetchParticipantBreakDown = async studyId => {\n  try {\n    // :studyID/datapoint\n    const response = await axios.get(`/participantbreakdowndata/${studyId}/datapoint`, {\n      headers: {\n        'authorization': sessionStorage.getItem('token')\n      }\n    });\n    sessionStorage.setItem(\"breakDown\", response.data);\n    return response.data;\n  } catch (err) {\n    console.log(`error`, err);\n    return [];\n  }\n};","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/store/dashboardFetches.js"],"names":["axios","FaJediOrder","fetchRegions","response","get","headers","sessionStorage","getItem","console","log","data","err","fetchRegionChild","parent","fetchTop3Level","window","localStorage","setItem","JSON","stringify","fetchUserInfo","fetchStudyByRegion","peerGroupId","regionId","fetchStudies","fetchUserSubscriptions","id","addSubscription","post","studyId","fetchAddStudyData","value","encryptedValue","fetchGetStudyData","updateRegion","regionID","put","updatePeerGroup","fetchRegionById","ID","Name","fetchPeerGroup","Category","sic","fetchParticipantRange","fetchParticipantBreakDown"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {FaJediOrder} from \"react-icons/all\";\n\nexport const fetchRegions = async () => {\n    try {\n        const response = await axios.get('/regions',\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        console.log(\"This is what we received\" + response.data);\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchRegionChild = async parent => {\n    try {\n        const response = await axios.get(`/regions/${parent}/datapoint`,\n            // const response = await axios.get(`/regions/2/datapoint`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        console.log(\"This is the result 2:\" + response.data)\n\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Get the first three regions - All of UK, Europe, Global,\nexport const fetchTop3Level = async () => {\n    try {\n        const response = await axios.get('/regions/top3',\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n\n        // set the top 3 levels\n        window.localStorage.setItem(\"top3Regions\", JSON.stringify(response.data));\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchUserInfo = async () => {\n    try {\n        const response = await axios.get('/users/info',\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        // we are setting a variable that the user has logged in\n        sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n        console.log(\"response.data\" + JSON.stringify(response.data));\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Get region by id - studyID, regionId\nexport const fetchStudyByRegion = async (peerGroupId, regionId) => {\n    try {\n        //let response = await axios.get(`/studies/16775/1`,\n        let response = await axios.get(`/studies/${peerGroupId}/${regionId}`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchStudies = async (peerGroupId) => {\n    try {\n        const response = await axios.get(`/studies/${peerGroupId}`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n\n        console.log(\"This is the peer group id :\", peerGroupId)\n        console.log(\"This is the study:\", response.data)\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n//\nexport const fetchUserSubscriptions = async (id) => {\n    try {\n        const response = await axios.get(\"/users/subscriptions\",\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        console.log(\"response.data\" + JSON.stringify(response.data));\n        sessionStorage.setItem(\"userSubscription\", JSON.stringify(response.data));\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const addSubscription = async (id) => {\n    try {\n        const response = await axios.post(\"/users/subscriptions\",\n            {\n                studyId: id\n            },\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchAddStudyData = async (value, studyId) => {\n    try {\n        const response = await axios.post(`/studydata/${studyId}/datapoint`,\n            {\n                encryptedValue: value,\n                value: value\n            },\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchGetStudyData = async studyId => {\n    try {\n        const response = await axios.get(`/studydata/${studyId}/datapoint`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Update the sql user table with the user's last region\nexport const updateRegion = async (regionID) => {\n    try {\n        const response = await axios.put(\"/users/region\",\n            {\n                regionID: regionID\n            },\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Update the sql user table with the user's last selected peer group\nexport const updatePeerGroup = async (id) => {\n    try {\n        const response = await axios.put(\"/users/peergroup\",\n            {\n                peerGroupId: id\n            },\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchRegionById = async regionId => {\n    try {\n        const response = await axios.get(`/regions/${regionId}`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n\n        sessionStorage.setItem(\"regionId\", response.data[0].ID);\n        sessionStorage.setItem(\"regionName\", response.data[0].Name);\n        sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\nexport const fetchPeerGroup = async peerGroupId => {\n    try {\n        const response = await axios.get(`/peergroup/${peerGroupId}`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        sessionStorage.setItem(\"fetchedLevel4\", response.data[0].Category); // fine\n        sessionStorage.setItem(\"fetchedLevel6\", response.data[1].Category); // fine\n\n        sessionStorage.setItem(\"fetchedLevel4SIC\", response.data[0].sic); // fine\n        sessionStorage.setItem(\"fetchedLevel6SIC\", response.data[1].sic); // fine\n        sessionStorage.setItem(\"userIsLoggedIn\", \"true\");\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Participant range data\nexport const fetchParticipantRange = async () => {\n    try {\n        const response = await axios.get(\"/getrange\",\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n\n// Participant get participant breakdown data\nexport const fetchParticipantBreakDown = async (studyId) => {\n    try {\n        // :studyID/datapoint\n        const response = await axios.get(`/participantbreakdowndata/${studyId}/datapoint`,\n            {\n                headers: {\n                    'authorization': sessionStorage.getItem('token')\n                }\n            });\n        sessionStorage.setItem(\"breakDown\", response.data);\n        return response.data;\n    } catch (err) {\n        console.log(`error`, err);\n        return [];\n    }\n};\n"]},"metadata":{},"sourceType":"module"}