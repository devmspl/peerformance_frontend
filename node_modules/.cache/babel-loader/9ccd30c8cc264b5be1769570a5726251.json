{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Signup/Signup2.js\";\nimport React, { Component } from 'react';\nimport * as fetches from './fetches';\nimport ConfirmationPopup from './components/ConfirmationPopup';\nimport TermsAndConditionsPopup from './components/TermsAndConditionsPopup/TermsAndConditionsPopup';\nimport { passwordStrength } from 'check-password-strength';\nimport PeerformanceLogo from \"../assets/peerformance_logo.svg\";\nimport validator from 'email-syntax-validator';\nimport TermsAndConditions from './components/TermsAndConditions';\nimport Button from '../components/Button';\nimport InputFeedback from '../components/InputFeedback';\nimport { feedbackMessages } from './constants';\nimport { PAGES, BUTTONS } from '../constants/en';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialFormState = {\n  emailAddress: {\n    value: '',\n    isValid: true,\n    error: false\n  },\n  password: {\n    value: '',\n    isValid: true,\n    error: false\n  },\n  confirmPassword: {\n    value: '',\n    isValid: true,\n    error: false\n  },\n  firstName: {\n    value: '',\n    isValid: true\n  },\n  surname: {\n    value: '',\n    isValid: true\n  }\n};\nexport default class Signup2 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      inputsForm: initialFormState,\n      isConfirmationPopupOpened: false,\n      conditionsAreAgreed: false,\n      isTermsAndConditionsPopupOpened: false,\n      alertMessage: {\n        type: '',\n        message: ''\n      }\n    };\n\n    this.setInputValue = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState(prevState => ({ ...prevState,\n        inputsForm: { ...prevState.inputsForm,\n          [name]: { ...prevState.inputsForm[name],\n            value: value,\n            isValid: !!value\n          }\n        }\n      }));\n    };\n\n    this.setInvalidField = (fieldName, value, error) => {\n      this.setState(prevState => {\n        return { ...prevState,\n          inputsForm: { ...prevState.inputsForm,\n            [fieldName]: { ...prevState.inputsForm[fieldName],\n              isValid: value,\n              error\n            }\n          }\n        };\n      });\n    };\n\n    this.registerAccount = async () => {\n      const {\n        inputsForm: {\n          emailAddress,\n          password,\n          firstName,\n          surname\n        }\n      } = this.state;\n\n      try {\n        const response = await fetches.signUp(emailAddress.value, password.value, firstName.value, surname.value);\n\n        if (response) {\n          this.setAlert('success', PAGES.SIGN_UP.MESSAGES.CREATED_ACCOUNT);\n          this.clearForm();\n        }\n      } catch (error) {\n        if (error.response) {\n          console.log(`error`, error.response);\n        }\n      } finally {\n        this.closeConfirmationPopup();\n      }\n    };\n\n    this.checkAccount = async () => {\n      const {\n        inputsForm: {\n          emailAddress: {\n            value\n          }\n        }\n      } = this.state;\n      const response = await fetches.checkAccount(value);\n      return response && response.data ? response.data : null;\n    };\n\n    this.refreshTokenMessage = () => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User activation in progress.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }, this), \"Please check your e-mail or click this link to regenerate process:\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-decoration-underline text-primary c-pointer\",\n        onClick: this.handleRefreshToken,\n        children: \"link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this);\n\n    this.handleRefreshToken = async () => {\n      await fetches.refreshToken(this.state.inputsForm.emailAddress.value);\n      this.setAlert('success', PAGES.SIGN_UP.MESSAGES.EMAIL_SENT);\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.clearAlert();\n\n      if (this.checkFormIsValid()) {\n        const accountInfo = await this.checkAccount();\n\n        if (accountInfo && accountInfo.userExists) {\n          this.setAlert('danger', PAGES.SIGN_UP.MESSAGES.ACCOUNT_EXIST);\n        } else if (accountInfo.userActivationInProgress) {\n          this.setAlert('warning', this.refreshTokenMessage());\n        } else if (accountInfo.domainInOrganization) {\n          this.openConfirmationPopup();\n        } else {\n          this.registerAccount();\n        }\n      } else {\n        this.setAlert('danger', PAGES.SIGN_UP.MESSAGES.FILL_REQUIRED_FIELDS);\n      }\n    };\n\n    this.checkFormIsValid = () => {\n      const {\n        inputsForm\n      } = this.state;\n      const hasError = [];\n      Object.keys(inputsForm).forEach(field => {\n        switch (field) {\n          case 'emailAddress':\n            if (inputsForm[field].value && !validator.validate(inputsForm[field].value)) {\n              this.setInvalidField(field, false, true);\n              hasError.push(1);\n            } else {\n              this.setInvalidField(field, !!inputsForm[field].value, false);\n              hasError.push(!!inputsForm[field].value ? 0 : 1);\n            }\n\n            break;\n\n          case 'password':\n            if (inputsForm[field].value && !this.checkPasswordStrength(inputsForm[field].value)) {\n              this.setInvalidField(field, !!inputsForm[field].value, true);\n              hasError.push(1);\n            } else {\n              this.setInvalidField(field, !!inputsForm[field].value, false);\n              hasError.push(!!inputsForm[field].value ? 0 : 1);\n            }\n\n            break;\n\n          case 'confirmPassword':\n            if (inputsForm[field].value !== inputsForm.password.value) {\n              this.setInvalidField(field, !!inputsForm[field].value, true);\n              hasError.push(1);\n            } else {\n              this.setInvalidField(field, !!inputsForm[field].value, false);\n              hasError.push(!!inputsForm[field].value ? 0 : 1);\n            }\n\n            break;\n\n          default:\n            this.setInvalidField(field, !!inputsForm[field].value);\n            hasError.push(!!inputsForm[field].value ? 0 : 1);\n            break;\n        }\n      });\n      return !hasError.some(i => i === 1);\n    };\n\n    this.checkPasswordStrength = password => {\n      var _passwordStrength;\n\n      return ((_passwordStrength = passwordStrength(password)) === null || _passwordStrength === void 0 ? void 0 : _passwordStrength.id) === 3;\n    };\n\n    this.closeConfirmationPopup = () => {\n      this.setState({\n        isConfirmationPopupOpened: false\n      });\n    };\n\n    this.openConfirmationPopup = () => {\n      this.setState({\n        isConfirmationPopupOpened: true\n      });\n    };\n\n    this.closeTermsAndConditionsPopup = () => {\n      this.setState({\n        isTermsAndConditionsPopupOpened: false\n      });\n    };\n\n    this.openTermsAndConditionsPopup = () => {\n      this.setState({\n        isTermsAndConditionsPopupOpened: true\n      });\n    };\n\n    this.agreedOrDisagreedConditions = value => {\n      this.closeTermsAndConditionsPopup();\n      this.setState({\n        conditionsAreAgreed: value\n      });\n    };\n\n    this.switchAgreed = () => {\n      this.setState({\n        conditionsAreAgreed: !this.state.conditionsAreAgreed\n      });\n    };\n\n    this.setAlert = (type, message) => this.setState({\n      alertMessage: {\n        type,\n        message\n      }\n    });\n\n    this.clearAlert = () => this.setState({\n      alertMessage: {\n        type: '',\n        message: ''\n      }\n    });\n\n    this.clearForm = () => this.setState({\n      inputsForm: initialFormState,\n      conditionsAreAgreed: false\n    });\n  }\n\n  render() {\n    const {\n      inputsForm: {\n        emailAddress,\n        password,\n        confirmPassword,\n        firstName,\n        surname\n      },\n      isConfirmationPopupOpened,\n      conditionsAreAgreed,\n      isTermsAndConditionsPopupOpened,\n      alertMessage\n    } = this.state;\n    const {\n      registerAccount,\n      onSubmit,\n      closeConfirmationPopup,\n      closeTermsAndConditionsPopup,\n      openTermsAndConditionsPopup,\n      agreedOrDisagreedConditions,\n      switchAgreed\n    } = this;\n    const {\n      SIGN_UP\n    } = PAGES;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-5 col-sm-12 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"w-50 mx-auto d-block mt-5\",\n            src: PeerformanceLogo,\n            alt: \"Peerformance Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            className: \"w-100\",\n            onSubmit: onSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"group-inputs p-3\",\n                children: [alertMessage.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `alert alert-${alertMessage.type} notification-message`,\n                  role: \"alert\",\n                  children: alertMessage.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input mt-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"firstName\",\n                    children: SIGN_UP.FORM.FIRST_NAME.LABEL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `form-control mt-2 ${!firstName.isValid ? 'is-invalid' : ''}`,\n                    type: \"text\",\n                    id: \"firstName\",\n                    name: \"firstName\",\n                    value: firstName.value,\n                    onChange: this.setInputValue,\n                    placeholder: SIGN_UP.FORM.FIRST_NAME.PLACEHOLDER,\n                    autoFocus: true,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 11\n                  }, this), !this.state.inputsForm.firstName.isValid && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.firstName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"surname\",\n                    children: SIGN_UP.FORM.LAST_NAME.LABEL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `form-control mt-2 ${!surname.isValid ? 'is-invalid' : ''}`,\n                    type: \"text\",\n                    id: \"surname\",\n                    name: \"surname\",\n                    value: surname.value,\n                    placeholder: SIGN_UP.FORM.LAST_NAME.PLACEHOLDER,\n                    onChange: this.setInputValue,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 11\n                  }, this), !this.state.inputsForm.surname.isValid && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.lastName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"emailAddress\",\n                    children: SIGN_UP.FORM.EMAIL.LABEL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `form-control mt-2 ${!emailAddress.isValid || emailAddress.error ? 'is-invalid' : ''}`,\n                    type: \"email\",\n                    id: \"emailAddress\",\n                    name: \"emailAddress\",\n                    value: emailAddress.value,\n                    onChange: this.setInputValue,\n                    placeholder: SIGN_UP.FORM.EMAIL.PLACEHOLDER,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 11\n                  }, this), !this.state.inputsForm.emailAddress.isValid && !this.state.inputsForm.emailAddress.error && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.emailRequired\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 13\n                  }, this), !this.state.inputsForm.emailAddress.isValid && this.state.inputsForm.emailAddress.error && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.invalidEmail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"password\",\n                    children: SIGN_UP.FORM.PASSWORD.LABEL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `form-control mt-2 ${!password.isValid || password.error ? 'is-invalid' : ''}`,\n                    type: \"password\",\n                    id: \"password\",\n                    name: \"password\",\n                    value: password.value,\n                    onChange: this.setInputValue,\n                    placeholder: SIGN_UP.FORM.PASSWORD.PLACEHOLDER,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 11\n                  }, this), !this.state.inputsForm.password.isValid && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.emptyPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 12\n                  }, this), this.state.inputsForm.password.error && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.passwordRequirements\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"group-input mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"confirmPassword\",\n                    children: SIGN_UP.FORM.CONFIRM_PASSWORD.LABEL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `form-control mt-2 ${!confirmPassword.isValid || confirmPassword.error ? 'is-invalid' : ''}`,\n                    type: \"password\",\n                    id: \"confirmPassword\",\n                    name: \"confirmPassword\",\n                    value: confirmPassword.value,\n                    onChange: this.setInputValue,\n                    placeholder: SIGN_UP.FORM.CONFIRM_PASSWORD.PLACEHOLDER,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 11\n                  }, this), !this.state.inputsForm.confirmPassword.isValid && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.emptyConnfirmPassword\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 12\n                  }, this), this.state.inputsForm.confirmPassword.error && /*#__PURE__*/_jsxDEV(InputFeedback, {\n                    message: feedbackMessages.samePasswords\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 12\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(TermsAndConditions, {\n                  switchAgreed: switchAgreed,\n                  conditionsAreAgreed: conditionsAreAgreed,\n                  openTermsAndConditionsPopup: openTermsAndConditionsPopup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  text: BUTTONS.SIGN_UP,\n                  disabled: !conditionsAreAgreed\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        isConfirmationPopupOpened: isConfirmationPopupOpened,\n        closeConfirmationPopup: closeConfirmationPopup,\n        registerAccount: registerAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TermsAndConditionsPopup, {\n        isOpen: isTermsAndConditionsPopupOpened,\n        closePopup: closeTermsAndConditionsPopup,\n        setAgreeConditionsValue: agreedOrDisagreedConditions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Signup/Signup2.js"],"names":["React","Component","fetches","ConfirmationPopup","TermsAndConditionsPopup","passwordStrength","validator","TermsAndConditions","Button","InputFeedback","feedbackMessages","PAGES","BUTTONS","initialFormState","emailAddress","value","isValid","error","password","confirmPassword","firstName","surname","Signup2","state","inputsForm","isConfirmationPopupOpened","conditionsAreAgreed","isTermsAndConditionsPopupOpened","alertMessage","type","message","setInputValue","e","name","target","setState","prevState","setInvalidField","fieldName","registerAccount","response","signUp","setAlert","SIGN_UP","MESSAGES","CREATED_ACCOUNT","clearForm","console","log","closeConfirmationPopup","checkAccount","data","refreshTokenMessage","handleRefreshToken","refreshToken","EMAIL_SENT","onSubmit","preventDefault","clearAlert","checkFormIsValid","accountInfo","userExists","ACCOUNT_EXIST","userActivationInProgress","domainInOrganization","openConfirmationPopup","FILL_REQUIRED_FIELDS","hasError","Object","keys","forEach","field","validate","push","checkPasswordStrength","some","i","id","closeTermsAndConditionsPopup","openTermsAndConditionsPopup","agreedOrDisagreedConditions","switchAgreed","render","PeerformanceLogo","FORM","FIRST_NAME","LABEL","PLACEHOLDER","LAST_NAME","lastName","EMAIL","emailRequired","invalidEmail","PASSWORD","emptyPassword","passwordRequirements","CONFIRM_PASSWORD","emptyConnfirmPassword","samePasswords"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as fetches from './fetches';\nimport ConfirmationPopup from './components/ConfirmationPopup';\nimport TermsAndConditionsPopup from './components/TermsAndConditionsPopup/TermsAndConditionsPopup';\nimport { passwordStrength } from 'check-password-strength';\nimport PeerformanceLogo from '../assets/peerformance_logo.svg';\nimport validator from 'email-syntax-validator';\nimport TermsAndConditions from './components/TermsAndConditions';\nimport Button from '../components/Button';\nimport InputFeedback from '../components/InputFeedback';\nimport { feedbackMessages } from './constants';\nimport { PAGES, BUTTONS } from '../constants/en';\n\nconst initialFormState = {\n\temailAddress: {\n\t\tvalue: '',\n\t\tisValid: true,\n\t\terror: false,\n\t},\n\tpassword: {\n\t\tvalue: '',\n\t\tisValid: true,\n\t\terror: false,\n\t},\n\tconfirmPassword: {\n\t\tvalue: '',\n\t\tisValid: true,\n\t\terror: false,\n\t},\n\tfirstName: {\n\t\tvalue: '',\n\t\tisValid: true,\n\t},\n\tsurname: {\n\t\tvalue: '',\n\t\tisValid: true,\n\t},\n};\n\nexport default class Signup2 extends Component {\n\tstate = {\n\t\tinputsForm: initialFormState,\n\t\tisConfirmationPopupOpened: false,\n\t\tconditionsAreAgreed: false,\n\t\tisTermsAndConditionsPopupOpened: false,\n\t\talertMessage: { type: '', message: '' },\n\t};\n\n\tsetInputValue = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tthis.setState((prevState) => ({\n\t\t\t...prevState,\n\t\t\tinputsForm: {\n\t\t\t\t...prevState.inputsForm,\n\t\t\t\t[name]: {\n\t\t\t\t\t...prevState.inputsForm[name],\n\t\t\t\t\tvalue: value,\n\t\t\t\t\tisValid: !!value,\n\t\t\t\t},\n\t\t\t},\n\t\t}));\n\t};\n\n\tsetInvalidField = (fieldName, value, error) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\t...prevState,\n\t\t\t\tinputsForm: {\n\t\t\t\t\t...prevState.inputsForm,\n\t\t\t\t\t[fieldName]: {\n\t\t\t\t\t\t...prevState.inputsForm[fieldName],\n\t\t\t\t\t\tisValid: value,\n\t\t\t\t\t\terror,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t};\n\n\tregisterAccount = async () => {\n\t\tconst {\n\t\t\tinputsForm: { emailAddress, password, firstName, surname },\n\t\t} = this.state;\n\t\ttry {\n\t\t\tconst response = await fetches.signUp(\n\t\t\t\temailAddress.value,\n\t\t\t\tpassword.value,\n\t\t\t\tfirstName.value,\n\t\t\t\tsurname.value\n\t\t\t);\n\t\t\tif (response) {\n\t\t\t\tthis.setAlert('success', PAGES.SIGN_UP.MESSAGES.CREATED_ACCOUNT);\n\t\t\t\tthis.clearForm();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.response) {\n\t\t\t\tconsole.log(`error`, error.response);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.closeConfirmationPopup();\n\t\t}\n\t};\n\n\tcheckAccount = async () => {\n\t\tconst {\n\t\t\tinputsForm: {\n\t\t\t\temailAddress: { value },\n\t\t\t},\n\t\t} = this.state;\n\t\tconst response = await fetches.checkAccount(value);\n\t\treturn response && response.data ? response.data : null;\n\t};\n\n\trefreshTokenMessage = () => (\n\t\t<p>\n\t\t\tUser activation in progress.\n\t\t\t<br />\n\t\t\tPlease check your e-mail or click this link to regenerate process:&nbsp;\n\t\t\t<span\n\t\t\t\tclassName='text-decoration-underline text-primary c-pointer'\n\t\t\t\tonClick={this.handleRefreshToken}\n\t\t\t>\n\t\t\t\tlink\n\t\t\t</span>\n\t\t</p>\n\t);\n\n\thandleRefreshToken = async () => {\n\t\tawait fetches.refreshToken(this.state.inputsForm.emailAddress.value);\n\t\tthis.setAlert('success', PAGES.SIGN_UP.MESSAGES.EMAIL_SENT);\n\t};\n\n\tonSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tthis.clearAlert();\n\t\tif (this.checkFormIsValid()) {\n\t\t\tconst accountInfo = await this.checkAccount();\n\n\t\t\tif (accountInfo && accountInfo.userExists) {\n\t\t\t\tthis.setAlert('danger', PAGES.SIGN_UP.MESSAGES.ACCOUNT_EXIST);\n\t\t\t} else if (accountInfo.userActivationInProgress) {\n\t\t\t\tthis.setAlert('warning', this.refreshTokenMessage());\n\t\t\t} else if (accountInfo.domainInOrganization) {\n\t\t\t\tthis.openConfirmationPopup();\n\t\t\t} else {\n\t\t\t\tthis.registerAccount();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setAlert('danger', PAGES.SIGN_UP.MESSAGES.FILL_REQUIRED_FIELDS);\n\t\t}\n\t};\n\n\tcheckFormIsValid = () => {\n\t\tconst { inputsForm } = this.state;\n\t\tconst hasError = [];\n\n\t\tObject.keys(inputsForm).forEach((field) => {\n\t\t\tswitch (field) {\n\t\t\t\tcase 'emailAddress':\n\t\t\t\t\tif (inputsForm[field].value && !validator.validate(inputsForm[field].value)) {\n\t\t\t\t\t\tthis.setInvalidField(field, false, true);\n\t\t\t\t\t\thasError.push(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value, false);\n\t\t\t\t\t\thasError.push(!!inputsForm[field].value ? 0 : 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'password':\n\t\t\t\t\tif (\n\t\t\t\t\t\tinputsForm[field].value &&\n\t\t\t\t\t\t!this.checkPasswordStrength(inputsForm[field].value)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value, true);\n\t\t\t\t\t\thasError.push(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value, false);\n\t\t\t\t\t\thasError.push(!!inputsForm[field].value ? 0 : 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'confirmPassword':\n\t\t\t\t\tif (inputsForm[field].value !== inputsForm.password.value) {\n\t\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value, true);\n\t\t\t\t\t\thasError.push(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value, false);\n\t\t\t\t\t\thasError.push(!!inputsForm[field].value ? 0 : 1);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.setInvalidField(field, !!inputsForm[field].value);\n\t\t\t\t\thasError.push(!!inputsForm[field].value ? 0 : 1);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\n\t\treturn !hasError.some((i) => i === 1);\n\t};\n\n\tcheckPasswordStrength = (password) => passwordStrength(password)?.id === 3;\n\n\tcloseConfirmationPopup = () => {\n\t\tthis.setState({\n\t\t\tisConfirmationPopupOpened: false,\n\t\t});\n\t};\n\n\topenConfirmationPopup = () => {\n\t\tthis.setState({\n\t\t\tisConfirmationPopupOpened: true,\n\t\t});\n\t};\n\n\tcloseTermsAndConditionsPopup = () => {\n\t\tthis.setState({\n\t\t\tisTermsAndConditionsPopupOpened: false,\n\t\t});\n\t};\n\n\topenTermsAndConditionsPopup = () => {\n\t\tthis.setState({\n\t\t\tisTermsAndConditionsPopupOpened: true,\n\t\t});\n\t};\n\n\tagreedOrDisagreedConditions = (value) => {\n\t\tthis.closeTermsAndConditionsPopup();\n\t\tthis.setState({\n\t\t\tconditionsAreAgreed: value,\n\t\t});\n\t};\n\n\tswitchAgreed = () => {\n\t\tthis.setState({\n\t\t\tconditionsAreAgreed: !this.state.conditionsAreAgreed,\n\t\t});\n\t};\n\n\tsetAlert = (type, message) => this.setState({ alertMessage: { type, message } });\n\tclearAlert = () => this.setState({ alertMessage: { type: '', message: '' } });\n\n\tclearForm = () => this.setState({ inputsForm: initialFormState, conditionsAreAgreed: false });\n\n\trender() {\n\t\tconst {\n\t\t\tinputsForm: { emailAddress, password, confirmPassword, firstName, surname },\n\t\t\tisConfirmationPopupOpened,\n\t\t\tconditionsAreAgreed,\n\t\t\tisTermsAndConditionsPopupOpened,\n\t\t\talertMessage,\n\t\t} = this.state;\n\t\tconst {\n\t\t\tregisterAccount,\n\t\t\tonSubmit,\n\t\t\tcloseConfirmationPopup,\n\t\t\tcloseTermsAndConditionsPopup,\n\t\t\topenTermsAndConditionsPopup,\n\t\t\tagreedOrDisagreedConditions,\n\t\t\tswitchAgreed,\n\t\t} = this;\n\t\tconst { SIGN_UP } = PAGES;\n\t\treturn (\n\t\t\t<div className='container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-md-5 col-sm-12 mx-auto'>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName='w-50 mx-auto d-block mt-5'\n\t\t\t\t\t\t\tsrc={PeerformanceLogo}\n\t\t\t\t\t\t\talt='Peerformance Logo'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<form noValidate className='w-100' onSubmit={onSubmit}>\n\t\t\t\t\t\t\t<div className='row mt-3'>\n\t\t\t\t\t\t\t\t<div className='group-inputs p-3'>\n\t\t\t\t\t\t\t\t\t{alertMessage.message && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={`alert alert-${alertMessage.type} notification-message`}\n\t\t\t\t\t\t\t\t\t\t\trole='alert'\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{alertMessage.message}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<div className='group-input mt-2'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='firstName'>{SIGN_UP.FORM.FIRST_NAME.LABEL}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control mt-2 ${\n\t\t\t\t\t\t\t\t\t\t\t\t!firstName.isValid ? 'is-invalid' : ''\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tid='firstName'\n\t\t\t\t\t\t\t\t\t\t\tname='firstName'\n\t\t\t\t\t\t\t\t\t\t\tvalue={firstName.value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.setInputValue}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={SIGN_UP.FORM.FIRST_NAME.PLACEHOLDER}\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.firstName.isValid && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback message={feedbackMessages.firstName} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group-input mt-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='surname'>{SIGN_UP.FORM.LAST_NAME.LABEL}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control mt-2 ${\n\t\t\t\t\t\t\t\t\t\t\t\t!surname.isValid ? 'is-invalid' : ''\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\t\tid='surname'\n\t\t\t\t\t\t\t\t\t\t\tname='surname'\n\t\t\t\t\t\t\t\t\t\t\tvalue={surname.value}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={SIGN_UP.FORM.LAST_NAME.PLACEHOLDER}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.setInputValue}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.surname.isValid && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback message={feedbackMessages.lastName} />\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group-input mt-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='emailAddress'>{SIGN_UP.FORM.EMAIL.LABEL}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control mt-2 ${\n\t\t\t\t\t\t\t\t\t\t\t\t!emailAddress.isValid || emailAddress.error\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'is-invalid'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\t\t\tid='emailAddress'\n\t\t\t\t\t\t\t\t\t\t\tname='emailAddress'\n\t\t\t\t\t\t\t\t\t\t\tvalue={emailAddress.value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.setInputValue}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={SIGN_UP.FORM.EMAIL.PLACEHOLDER}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.emailAddress.isValid &&\n\t\t\t\t\t\t\t\t\t\t\t!this.state.inputsForm.emailAddress.error && (\n\t\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.emailRequired}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.emailAddress.isValid &&\n\t\t\t\t\t\t\t\t\t\t\tthis.state.inputsForm.emailAddress.error && (\n\t\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.invalidEmail}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group-input mt-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='password'>{SIGN_UP.FORM.PASSWORD.LABEL}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control mt-2 ${\n\t\t\t\t\t\t\t\t\t\t\t\t!password.isValid || password.error\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'is-invalid'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\t\tvalue={password.value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.setInputValue}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={SIGN_UP.FORM.PASSWORD.PLACEHOLDER}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.password.isValid && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.emptyPassword}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{this.state.inputsForm.password.error && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.passwordRequirements}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='group-input mt-3'>\n\t\t\t\t\t\t\t\t\t\t<label htmlFor='confirmPassword'>{SIGN_UP.FORM.CONFIRM_PASSWORD.LABEL}</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName={`form-control mt-2 ${\n\t\t\t\t\t\t\t\t\t\t\t\t!confirmPassword.isValid || confirmPassword.error\n\t\t\t\t\t\t\t\t\t\t\t\t\t? 'is-invalid'\n\t\t\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\t\t\t\tid='confirmPassword'\n\t\t\t\t\t\t\t\t\t\t\tname='confirmPassword'\n\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword.value}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.setInputValue}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={SIGN_UP.FORM.CONFIRM_PASSWORD.PLACEHOLDER}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{!this.state.inputsForm.confirmPassword.isValid && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.emptyConnfirmPassword}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t{this.state.inputsForm.confirmPassword.error && (\n\t\t\t\t\t\t\t\t\t\t\t<InputFeedback\n\t\t\t\t\t\t\t\t\t\t\t\tmessage={feedbackMessages.samePasswords}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<TermsAndConditions\n\t\t\t\t\t\t\t\t\t\tswitchAgreed={switchAgreed}\n\t\t\t\t\t\t\t\t\t\tconditionsAreAgreed={conditionsAreAgreed}\n\t\t\t\t\t\t\t\t\t\topenTermsAndConditionsPopup={openTermsAndConditionsPopup}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\t\ttext={BUTTONS.SIGN_UP}\n\t\t\t\t\t\t\t\t\t\tdisabled={!conditionsAreAgreed}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ConfirmationPopup\n\t\t\t\t\tisConfirmationPopupOpened={isConfirmationPopupOpened}\n\t\t\t\t\tcloseConfirmationPopup={closeConfirmationPopup}\n\t\t\t\t\tregisterAccount={registerAccount}\n\t\t\t\t/>\n\t\t\t\t<TermsAndConditionsPopup\n\t\t\t\t\tisOpen={isTermsAndConditionsPopupOpened}\n\t\t\t\t\tclosePopup={closeTermsAndConditionsPopup}\n\t\t\t\t\tsetAgreeConditionsValue={agreedOrDisagreedConditions}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}