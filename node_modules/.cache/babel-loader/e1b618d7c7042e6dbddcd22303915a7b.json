{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import{getStudyData,getStudies,updateLastPeerGroup,getParticipantBreakdown,updateLastRegion}from'./store/dashboardActions';// import { getStudyData } from './store/dashboardActions';\nimport{dashboardActions}from'./store/dashboard';import ActiveStudies from'./Dashboard/ActiveStudies';import AvailableStudies from'./Dashboard/AvailableStudies';import QueuedStudies from'./Dashboard/QueuedStudies';// handle click event of logout button\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LeftSideNav(props){var availableStudies=useSelector(function(state){return state.dashboard.availableStudies;});var queuedStudies=useSelector(function(state){return state.dashboard.queuedStudies;});var userSubscriptions=useSelector(function(state){return state.dashboard.userSubscriptions;});var activeStudy=useSelector(function(state){return state.dashboard.activeStudy;});var dispatch=useDispatch();var handlingStudyClick=function handlingStudyClick(study){dispatch(dashboardActions.setActiveStudy(study));var isSubscriber=userSubscriptions.some(function(subscription){return subscription.StudyID===study.ID;});if(isSubscriber){dispatch(getStudyData(study.ID));dispatch(getParticipantBreakdown(study===null||study===void 0?void 0:study.ID));}else{dispatch(dashboardActions.setStudyData(null));}};var onActiveStudyClick=function onActiveStudyClick(subscription){dispatch(getStudies(subscription===null||subscription===void 0?void 0:subscription.PeerGroupID,subscription===null||subscription===void 0?void 0:subscription.RegionID,subscription===null||subscription===void 0?void 0:subscription.StudyID));dispatch(updateLastPeerGroup(subscription===null||subscription===void 0?void 0:subscription.PeerGroupID));dispatch(getParticipantBreakdown(subscription===null||subscription===void 0?void 0:subscription.StudyID));sessionStorage.setItem(\"regionId\",subscription===null||subscription===void 0?void 0:subscription.RegionID);dispatch(updateLastRegion(subscription===null||subscription===void 0?void 0:subscription.RegionID));};return/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"13px\"},children:[/*#__PURE__*/_jsx(ActiveStudies,{activeStudies:userSubscriptions,activeStudy:activeStudy,onActiveStudyClick:onActiveStudyClick}),/*#__PURE__*/_jsx(AvailableStudies,{activeStudy:activeStudy,availableStudies:availableStudies,userSubscriptions:userSubscriptions,onStudyClick:handlingStudyClick}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(QueuedStudies,{activeStudy:activeStudy,queuedStudies:queuedStudies,userSubscriptions:userSubscriptions,onStudyClick:handlingStudyClick})]});}export default LeftSideNav;","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/LeftSideNav.js"],"names":["React","useSelector","useDispatch","getStudyData","getStudies","updateLastPeerGroup","getParticipantBreakdown","updateLastRegion","dashboardActions","ActiveStudies","AvailableStudies","QueuedStudies","LeftSideNav","props","availableStudies","state","dashboard","queuedStudies","userSubscriptions","activeStudy","dispatch","handlingStudyClick","study","setActiveStudy","isSubscriber","some","subscription","StudyID","ID","setStudyData","onActiveStudyClick","PeerGroupID","RegionID","sessionStorage","setItem","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n    getStudyData,\n    getStudies,\n    updateLastPeerGroup,\n    getParticipantBreakdown, updateLastRegion\n} from './store/dashboardActions';\n// import { getStudyData } from './store/dashboardActions';\nimport {dashboardActions} from './store/dashboard';\nimport ActiveStudies from './Dashboard/ActiveStudies'\nimport AvailableStudies from './Dashboard/AvailableStudies';\nimport QueuedStudies from './Dashboard/QueuedStudies';\n\n// handle click event of logout button\n\nfunction LeftSideNav(props) {\n    const availableStudies = useSelector(state => state.dashboard.availableStudies);\n    const queuedStudies = useSelector(state => state.dashboard.queuedStudies);\n    const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n    const activeStudy = useSelector(state => state.dashboard.activeStudy);\n    const dispatch = useDispatch();\n\n\n    const handlingStudyClick = study => {\n        dispatch(dashboardActions.setActiveStudy(study));\n        const isSubscriber = userSubscriptions.some(subscription => subscription.StudyID === study.ID);\n        if (isSubscriber) {\n            dispatch(getStudyData(study.ID));\n            dispatch(getParticipantBreakdown(study?.ID))\n        } else {\n            dispatch(dashboardActions.setStudyData(null));\n        }\n    };\n\n    const onActiveStudyClick = subscription => {\n        dispatch(getStudies(subscription?.PeerGroupID, subscription?.RegionID, subscription?.StudyID));\n        dispatch(updateLastPeerGroup(subscription?.PeerGroupID));\n        dispatch(getParticipantBreakdown(subscription?.StudyID))\n        sessionStorage.setItem(\"regionId\", subscription?.RegionID);\n        dispatch(updateLastRegion(subscription?.RegionID));\n    }\n\n    return (\n        <div style={{marginLeft: \"13px\"}}>\n            <ActiveStudies\n                activeStudies={userSubscriptions}\n                activeStudy={activeStudy}\n                onActiveStudyClick={onActiveStudyClick}\n            />\n            <AvailableStudies\n                activeStudy={activeStudy}\n                availableStudies={availableStudies}\n                userSubscriptions={userSubscriptions}\n                onStudyClick={handlingStudyClick}\n            />\n            <br/>\n\n            <QueuedStudies\n                activeStudy={activeStudy}\n                queuedStudies={queuedStudies}\n                userSubscriptions={userSubscriptions}\n                onStudyClick={handlingStudyClick}\n            />\n\n        </div>\n    );\n}\n\nexport default LeftSideNav;\n"]},"metadata":{},"sourceType":"module"}