{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/chart/line.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport lockOpen from \"../Styleguide/icons/basic-lock-open.svg\";\nimport { getMonthName } from '../Utils/dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {\n  count: DATA_COUNT,\n  min: -100,\n  max: 100\n};\nlet height = 155;\nlet width = 400;\n\nconst setUpChart = (data, name) => {\n  const arrayMonths = data ? data.map(row => new Date(row.Date).getMonth()) : [];\n  return {\n    type: 'bar',\n    labels: arrayMonths ? arrayMonths.map(month => getMonthName(month)) : [],\n    datasets: [{\n      label: name,\n      data: data ? data.map(row => row.Value) : [],\n      borderColor: \"#91FBAF\",\n      backgroundColor: \"#91FBAF\",\n      pointRadius: 0\n    }, {\n      label: 'Industry Average',\n      data: data ? data.map(row => row.Average) : [],\n      borderColor: \"#6585FF\",\n      backgroundColor: \"#6585FF\",\n      pointRadius: 0\n    }],\n    options: {\n      legend: {\n        labels: {\n          fontColor: \"blue\",\n          fontSize: 18\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    }\n  };\n};\n\nconst setUpDefaultChart = {\n  type: 'bar',\n  labels: [\"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\"],\n  datasets: [{\n    label: 'My data',\n    data: [6, 5.5, 6, 6.5, 7, 6.7, 4.2, 7, 7.5, 7, 6.5, 6],\n    borderColor: \"#91FBAF\",\n    backgroundColor: \"#91FBAF\",\n    pointRadius: 0\n  }, {\n    label: 'Industry Average',\n    data: [7, 7.5, 7, 6.5, 6, 4.5, 5, 6, 5.5, 6, 6.5, 7],\n    borderColor: \"#6585FF\",\n    backgroundColor: \"#6585FF\",\n    pointRadius: 0\n  }],\n  options: {\n    legend: {\n      labels: {\n        fontColor: \"blue\",\n        fontSize: 18\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  }\n};\nconst setUpEmptyChart = {\n  type: 'bar',\n  labels: [\"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\"],\n  datasets: [{\n    label: 'My data',\n    data: [1],\n    borderColor: \"#91FBAF\",\n    backgroundColor: \"#91FBAF\",\n    pointRadius: 0\n  }, {\n    label: 'Industry Average',\n    data: [2],\n    borderColor: \"#6585FF\",\n    backgroundColor: \"#6585FF\",\n    pointRadius: 0\n  }],\n  options: {\n    legend: {\n      labels: {\n        fontColor: \"blue\",\n        fontSize: 18\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  }\n};\nconst options = {\n  maintainAspectRatio: true,\n  plugins: {\n    legend: {\n      display: false,\n      labels: {\n        color: 'rgb(255, 99, 132)'\n      }\n    }\n  },\n  scales: {\n    y: {\n      ticks: {\n        beginAtZero: true\n      },\n      grid: {\n        borderDash: [6, 2],\n        color: \"#5E6891\"\n      }\n    }\n  },\n  elements: {\n    line: {\n      tension: 0.2\n    }\n  }\n};\nexport const LineChart = _ref => {\n  let {\n    data,\n    name,\n    subscription\n  } = _ref;\n  const chartData = setUpChart(data, name);\n\n  if (subscription === true && data && JSON.stringify(data).length > 50) {\n    if (JSON.stringify(data).length > 50) {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  if (subscription === true || JSON.stringify(data) === \"undefined\" || JSON.stringify(data) === undefined) {\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: setUpEmptyChart,\n      options: options,\n      width: width,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: \"3.5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        data: setUpDefaultChart,\n        options: options,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-background\",\n        style: {\n          borderTopRightRadius: \"50px\",\n          borderTopLeftRadius: \"50px\",\n          borderBottomLeftRadius: \"50px\",\n          borderBottomRightRadius: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-background-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: lockOpen,\n            alt: \"lock-open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                fontSize: \".725em\"\n              },\n              children: \"Suscribe to Study to see your statistic \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              style: {\n                fontSize: \".725em\"\n              },\n              children: \" every day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this);\n  }\n};\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/chart/line.js"],"names":["React","Line","getMonthName","DATA_COUNT","NUMBER_CFG","count","min","max","height","width","setUpChart","data","name","arrayMonths","map","row","Date","getMonth","type","labels","month","datasets","label","Value","borderColor","backgroundColor","pointRadius","Average","options","legend","fontColor","fontSize","scales","y","beginAtZero","setUpDefaultChart","setUpEmptyChart","maintainAspectRatio","plugins","display","color","ticks","grid","borderDash","elements","line","tension","LineChart","subscription","chartData","JSON","stringify","length","undefined","paddingBottom","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","lockOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport lockOpen from '../Styleguide/icons/basic-lock-open.svg'\nimport {getMonthName} from '../Utils/dashboard';\n\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\nlet height = 155;\nlet width = 400;\n\nconst setUpChart = (data, name) => {\n    const arrayMonths = data ? data.map(row => new Date(row.Date).getMonth()) : [];\n    return {\n        type: 'bar',\n        labels: arrayMonths ? arrayMonths.map(month => getMonthName(month)) : [],\n        datasets: [\n            {\n                label: name,\n                data: data ? data.map(row => row.Value) : [],\n                borderColor: \"#91FBAF\",\n                backgroundColor: \"#91FBAF\",\n                pointRadius: 0\n            },\n            {\n                label: 'Industry Average',\n                data: data ? data.map(row => row.Average) : [],\n                borderColor: \"#6585FF\",\n                backgroundColor: \"#6585FF\",\n                pointRadius: 0\n            },\n        ],\n        options: {\n            legend: {\n                labels: {\n                    fontColor: \"blue\",\n                    fontSize: 18\n                }\n            },\n            scales: {\n                y: {\n                    beginAtZero: true\n                }\n            }\n        }\n    };\n}\n\n\n\nconst setUpDefaultChart = {\n    type: 'bar',\n    labels: [\"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\",\n    ],\n    datasets: [\n        {\n            label: 'My data',\n            data: [6, 5.5, 6, 6.5, 7, 6.7, 4.2, 7, 7.5, 7, 6.5, 6],\n            borderColor: \"#91FBAF\",\n            backgroundColor: \"#91FBAF\",\n            pointRadius: 0\n        },\n        {\n            label: 'Industry Average',\n            data: [7, 7.5, 7, 6.5, 6, 4.5, 5, 6, 5.5, 6, 6.5, 7],\n            borderColor: \"#6585FF\",\n            backgroundColor: \"#6585FF\",\n            pointRadius: 0\n        },\n    ],\n    options: {\n        legend: {\n            labels: {\n                fontColor: \"blue\",\n                fontSize: 18\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n};\n\nconst setUpEmptyChart = {\n    type: 'bar',\n    labels: [\"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\",\n    ],\n    datasets: [\n        {\n            label: 'My data',\n            data: [1],\n            borderColor: \"#91FBAF\",\n            backgroundColor: \"#91FBAF\",\n            pointRadius: 0\n        },\n        {\n            label: 'Industry Average',\n            data: [2],\n            borderColor: \"#6585FF\",\n            backgroundColor: \"#6585FF\",\n            pointRadius: 0\n        },\n    ],\n    options: {\n        legend: {\n            labels: {\n                fontColor: \"blue\",\n                fontSize: 18\n            }\n        },\n        scales: {\n            y: {\n                beginAtZero: true\n            }\n        }\n    }\n};\n\nconst options = {\n    maintainAspectRatio: true,\n    plugins: {\n        legend: {\n            display: false,\n            labels: {\n                color: 'rgb(255, 99, 132)',\n\n\n            }\n        }\n    },\n    scales: {\n        y: {\n            ticks: {\n                beginAtZero: true,\n            },\n            grid: {\n                borderDash: [6, 2],\n                color: \"#5E6891\",\n            }\n        },\n    },\n    elements: {\n        line: {\n            tension: 0.2\n        }\n    }\n};\n\nexport const LineChart = ({data, name,subscription}) => {\n    const chartData = setUpChart(data, name);\n\n\n    if (subscription === true && data && JSON.stringify(data).length > 50) {\n        if (JSON.stringify(data).length > 50) {\n            return (\n                <Line\n                    data={chartData}\n                    options={options}\n                    width={width}\n                    height={height}\n                />\n            )\n        }\n    }\n\n    if (subscription === true || JSON.stringify(data) === \"undefined\" || JSON.stringify(data) === undefined) {\n        return (<Line\n                data={setUpEmptyChart}\n                options={options}\n                width={width}\n                height={height}\n            />\n        )\n    } else {\n        return (\n            <div style={{\n                paddingBottom: \"3.5px\"\n            }}>\n                <Line\n                    data={setUpDefaultChart}\n                    options={options}\n                    width={width}\n                    height={height}\n                />\n                <div className='chart-background'\n                     style={{\n                         borderTopRightRadius: \"50px\",\n                         borderTopLeftRadius: \"50px\",\n                         borderBottomLeftRadius: \"50px\",\n                         borderBottomRightRadius: \"50px\",\n                     }}\n                >\n                    <div className=\"chart-background-content\">\n                        <img src={lockOpen} alt=\"lock-open\"/>\n                        <div>\n                            <small style={{fontSize: \".725em\"}}>Suscribe to Study to see your statistic </small>\n                            <br/>\n                            <small style={{fontSize: \".725em\"}}> every day</small>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n\n};\n"]},"metadata":{},"sourceType":"module"}