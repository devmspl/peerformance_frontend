{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Dashboard/AddDataPercentageType.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport roundedArrow from \"../Styleguide/icons/rounded-arrow.svg\";\nimport greenCheck from \"../Styleguide/icons/green-check.svg\";\nimport leftArrow from \"../Styleguide/icons/left-arrow.svg\";\nimport crossIcon from \"../Styleguide/x.svg\";\nimport { getMonthName, getCurrentMonth } from '../Utils/dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddDataPercentageType = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    addData\n  } = _ref;\n  const [currentMonthValue, setCurrentMonthValue] = useState(0);\n  const [oneMonthAgoValue, setOneMonthAgoValue] = useState(0);\n  const [twoMonthAgoValue, setTwoMonthAgoValue] = useState(0);\n  const [threeMonthAgoValue, setThreeMonthAgoValue] = useState(0);\n  const threeMonthsAverage = (parseFloat(oneMonthAgoValue) + parseFloat(twoMonthAgoValue) + parseFloat(threeMonthAgoValue)) / 3;\n  const submissionValue = currentMonthValue && oneMonthAgoValue && twoMonthAgoValue && threeMonthAgoValue ? ((currentMonthValue - threeMonthsAverage) / threeMonthsAverage * 100).toFixed(2) : '';\n\n  const validateValue = (value, setValue) => {\n    if (!isNaN(value)) {\n      setValue(value);\n    }\n  };\n\n  const addPercentageData = e => {\n    e.preventDefault();\n    addData(submissionValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    onSubmit: addPercentageData,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-data-popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-data-popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-data-popup-header-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Result Calculator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"description\",\n              children: \"Calculate a percentage applied to the users data submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: crossIcon,\n            alt: \"x\",\n            className: \"cross\",\n            onClick: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-data-popup-content-third-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-inputs-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '45%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-data-popup-content-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: getMonthName(getCurrentMonth(0))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"add-data-popup-content-label-right\",\n                children: \"Current Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-2\",\n              type: \"text\",\n              id: \"currentMonth\",\n              name: \"currentMonth\",\n              value: currentMonthValue ? currentMonthValue : '',\n              onChange: e => validateValue(e.target.value, setCurrentMonthValue),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '45%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-data-popup-content-label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: getMonthName(getCurrentMonth(2))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-2\",\n              type: \"text\",\n              id: \"twoMonthAgo\",\n              name: \"twoMonthAgo\",\n              value: twoMonthAgoValue ? twoMonthAgoValue : '',\n              onChange: e => validateValue(e.target.value, setTwoMonthAgoValue),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-inputs-row mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '45%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-data-popup-content-label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: getMonthName(getCurrentMonth(1))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-2\",\n              type: \"text\",\n              id: \"oneMonthAgo\",\n              name: \"oneMonthAgo\",\n              value: oneMonthAgoValue ? oneMonthAgoValue : '',\n              onChange: e => validateValue(e.target.value, setOneMonthAgoValue),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '45%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-data-popup-content-label\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: getMonthName(getCurrentMonth(3))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-2\",\n              type: \"text\",\n              id: \"threeMonthAgo\",\n              name: \"threeMonthAgo\",\n              value: threeMonthAgoValue ? threeMonthAgoValue : '',\n              onChange: e => validateValue(e.target.value, setThreeMonthAgoValue),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-message\",\n          children: \"Figures entered above will not be shared with Peerformance \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-data-submit-btn\",\n            type: \"submit\",\n            disabled: !submissionValue,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: roundedArrow,\n              alt: \"rounded-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add to Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 76\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-data-counter\",\n            children: submissionValue ? `${submissionValue}%` : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-data-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: greenCheck,\n            alt: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save date on device for future use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddDataPercentageType, \"DbDRkPUs1WXdyHOhu+h22sGpaz8=\");\n\n_c = AddDataPercentageType;\nexport default AddDataPercentageType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDataPercentageType\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Dashboard/AddDataPercentageType.jsx"],"names":["React","useState","getMonthName","getCurrentMonth","AddDataPercentageType","handleClose","addData","currentMonthValue","setCurrentMonthValue","oneMonthAgoValue","setOneMonthAgoValue","twoMonthAgoValue","setTwoMonthAgoValue","threeMonthAgoValue","setThreeMonthAgoValue","threeMonthsAverage","parseFloat","submissionValue","toFixed","validateValue","value","setValue","isNaN","addPercentageData","e","preventDefault","crossIcon","width","target","roundedArrow","greenCheck"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAKA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,oBAA9C;;;AAGC,MAAMC,qBAAqB,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAA2B;AAEvD,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM,CAACY,kBAAD,EAAqBC,qBAArB,IAA8Cb,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAMc,kBAAkB,GAAG,CAACC,UAAU,CAACP,gBAAD,CAAV,GAA+BO,UAAU,CAACL,gBAAD,CAAzC,GAA8DK,UAAU,CAACH,kBAAD,CAAzE,IAA+F,CAA1H;AACA,QAAMI,eAAe,GAAGV,iBAAiB,IAAIE,gBAArB,IAAyCE,gBAAzC,IAA6DE,kBAA7D,GAAkF,CAAC,CAACN,iBAAiB,GAAGQ,kBAArB,IAAyCA,kBAAzC,GAA8D,GAA/D,EAAoEG,OAApE,CAA4E,CAA5E,CAAlF,GAAmK,EAA3L;;AAEA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACvC,QAAG,CAACC,KAAK,CAACF,KAAD,CAAT,EAAkB;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMG,iBAAiB,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACAnB,IAAAA,OAAO,CAACW,eAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEM,iBAA3B;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,iCACI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAM,cAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEG,SAAV;AAAqB,YAAA,GAAG,EAAC,GAAzB;AAA6B,YAAA,SAAS,EAAC,OAAvC;AAA+C,YAAA,OAAO,EAAErB;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE;AAAEsB,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA,sCACI;AAAA,0BAAOzB,YAAY,CAACC,eAAe,CAAC,CAAD,CAAhB;AAAnB;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,gBAAA,SAAS,EAAC,oCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AACI,cAAA,SAAS,EAAC,mBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,cAHP;AAII,cAAA,IAAI,EAAC,cAJT;AAKI,cAAA,KAAK,EAAEI,iBAAiB,GAAGA,iBAAH,GAAuB,EALnD;AAMI,cAAA,QAAQ,EAAEiB,CAAC,IAAIL,aAAa,CAACK,CAAC,CAACI,MAAF,CAASR,KAAV,EAAiBZ,oBAAjB,CANhC;AAOI,cAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI;AAAK,YAAA,KAAK,EAAE;AAAEmB,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA,qCACI;AAAA,0BAAOzB,YAAY,CAACC,eAAe,CAAC,CAAD,CAAhB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,SAAS,EAAC,mBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,aAHP;AAII,cAAA,IAAI,EAAC,aAJT;AAKI,cAAA,KAAK,EAAEQ,gBAAgB,GAAGA,gBAAH,GAAsB,EALjD;AAMI,cAAA,QAAQ,EAAEa,CAAC,IAAIL,aAAa,CAACK,CAAC,CAACI,MAAF,CAASR,KAAV,EAAiBR,mBAAjB,CANhC;AAOI,cAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAkCI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAK,YAAA,KAAK,EAAE;AAAEe,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA,qCACI;AAAA,0BAAOzB,YAAY,CAACC,eAAe,CAAC,CAAD,CAAhB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,SAAS,EAAC,mBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,aAHP;AAII,cAAA,IAAI,EAAC,aAJT;AAKI,cAAA,KAAK,EAAEM,gBAAgB,GAAGA,gBAAH,GAAsB,EALjD;AAMI,cAAA,QAAQ,EAAEe,CAAC,IAAIL,aAAa,CAACK,CAAC,CAACI,MAAF,CAASR,KAAV,EAAiBV,mBAAjB,CANhC;AAOI,cAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAeI;AAAK,YAAA,KAAK,EAAE;AAAEiB,cAAAA,KAAK,EAAE;AAAT,aAAZ;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,8BAAf;AAAA,qCACI;AAAA,0BAAOzB,YAAY,CAACC,eAAe,CAAC,CAAD,CAAhB;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AACI,cAAA,SAAS,EAAC,mBADd;AAEI,cAAA,IAAI,EAAC,MAFT;AAGI,cAAA,EAAE,EAAC,eAHP;AAII,cAAA,IAAI,EAAC,eAJT;AAKI,cAAA,KAAK,EAAEU,kBAAkB,GAAGA,kBAAH,GAAwB,EALrD;AAMI,cAAA,QAAQ,EAAEW,CAAC,IAAIL,aAAa,CAACK,CAAC,CAACI,MAAF,CAASR,KAAV,EAAiBN,qBAAjB,CANhC;AAOI,cAAA,QAAQ;AAPZ;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCJ,eAkEI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEJ,eAmEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,qBAAlB;AAAwC,YAAA,IAAI,EAAC,QAA7C;AAAsD,YAAA,QAAQ,EAAE,CAACG,eAAjE;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEY,YAAV;AAAwB,cAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADJ,oBACmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBAAmCZ,eAAe,GAAI,GAAEA,eAAgB,GAAtB,GAA2B;AAA7E;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnEJ,eAyEI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEa,UAAV;AAAsB,YAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzEJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgGH,CApHA;;GAAM1B,qB;;KAAAA,qB;AAsHP,eAAeA,qBAAf","sourcesContent":["import React, {useState} from 'react';\nimport roundedArrow from '../Styleguide/icons/rounded-arrow.svg';\nimport greenCheck from '../Styleguide/icons/green-check.svg';\nimport leftArrow from '../Styleguide/icons/left-arrow.svg';\nimport crossIcon from '../Styleguide/x.svg';\nimport { getMonthName, getCurrentMonth } from '../Utils/dashboard';\n\n\n const AddDataPercentageType = ({handleClose, addData}) => {\n\n    const [currentMonthValue, setCurrentMonthValue] = useState(0);\n    const [oneMonthAgoValue, setOneMonthAgoValue] = useState(0);\n    const [twoMonthAgoValue, setTwoMonthAgoValue] = useState(0);\n    const [threeMonthAgoValue, setThreeMonthAgoValue] = useState(0);\n    const threeMonthsAverage = (parseFloat(oneMonthAgoValue) + parseFloat(twoMonthAgoValue) + parseFloat(threeMonthAgoValue))/3;\n    const submissionValue = currentMonthValue && oneMonthAgoValue && twoMonthAgoValue && threeMonthAgoValue ? ((currentMonthValue - threeMonthsAverage)/threeMonthsAverage * 100).toFixed(2) : '';\n\n    const validateValue = (value, setValue) => {\n        if(!isNaN(value)) {\n            setValue(value);\n        }\n    }\n\n    const addPercentageData = e => {\n        e.preventDefault();\n        addData(submissionValue);\n    }\n\n    return (\n        <form noValidate onSubmit={addPercentageData}>\n            <div className=\"add-data-popup-container\">\n                <div className=\"add-data-popup-header\">\n                    <div className=\"add-data-popup-header-left\">\n                        <div>\n                            <span className='title'>Result Calculator</span>\n                            <span className='description'>Calculate a percentage applied to the users data submission</span>\n                        </div>\n                    </div>\n                    <div>\n                        <img src={crossIcon} alt=\"x\" className=\"cross\" onClick={handleClose} />\n                    </div>\n                </div>\n                <div className=\"add-data-popup-content-third-type\">\n                    <div className=\"group-inputs-row\">\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(0))}</span>\n                                <span className=\"add-data-popup-content-label-right\">Current Month</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='currentMonth'\n                                name='currentMonth'\n                                value={currentMonthValue ? currentMonthValue : ''}\n                                onChange={e => validateValue(e.target.value, setCurrentMonthValue)}\n                                required\n                            />\n                        </div>\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(2))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='twoMonthAgo'\n                                name='twoMonthAgo'\n                                value={twoMonthAgoValue ? twoMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setTwoMonthAgoValue)}\n                                required\n                            />\n                        </div>\n\n                    </div>\n\n                    <div className=\"group-inputs-row mt-3\">\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(1))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='oneMonthAgo'\n                                name='oneMonthAgo'\n                                value={oneMonthAgoValue ? oneMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setOneMonthAgoValue)}\n                                required\n                            />\n                        </div>\n                        <div style={{ width: '45%' }}>\n                            <div className=\"add-data-popup-content-label\">\n                                <span>{getMonthName(getCurrentMonth(3))}</span>\n                            </div>\n                            <input\n                                className='form-control mt-2'\n                                type='text'\n                                id='threeMonthAgo'\n                                name='threeMonthAgo'\n                                value={threeMonthAgoValue ? threeMonthAgoValue : ''}\n                                onChange={e => validateValue(e.target.value, setThreeMonthAgoValue)}\n                                required\n                            />\n                        </div>\n\n                    </div>\n\n                    <span className=\"red-message\">Figures entered above will not be shared with Peerformance </span>\n                    <div className=\"buttons-row\">\n                        <button className=\"add-data-submit-btn\" type='submit' disabled={!submissionValue}>\n                            <img src={roundedArrow} alt=\"rounded-arrow\" /> <span>Add to Submission</span>\n                        </button>\n                        <div className=\"add-data-counter\">{submissionValue ? `${submissionValue}%` : ''}</div>\n                    </div>\n                    <div className=\"add-data-footer\">\n                        <img src={greenCheck} alt=\"check\" />\n                        <span>Save date on device for future use</span>\n                    </div>\n                </div>\n            </div>\n        </form>\n        \n    );\n}\n\nexport default AddDataPercentageType;"]},"metadata":{},"sourceType":"module"}