{"ast":null,"code":"import _slicedToArray from\"/home/mspl/Desktop/peerformance_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{CircularProgressbar,buildStyles}from'react-circular-progressbar';import'react-circular-progressbar/dist/styles.css';import{Doughnut}from'react-chartjs-2';import{LineChart,LockedLineChart}from'../src/chart/line';import AddDataPopUp from\"./AddDataPopup\";import hierarchy from\"./Styleguide/hierarchy.svg\";import mapPin from\"./Styleguide/map-pin.svg\";import fakeImage3 from\"./Styleguide/fake_dashboard_3.svg\";import users from\"./Styleguide/users.svg\";import{getRegionDescription,checkSubscription}from'./Utils/dashboard';import{useSelector,useDispatch}from'react-redux';import SubscribeToStudy from'./Dashboard/SubscribeToStudy';import{getParticipantBreakdown,subscribeStudy}from'./store/dashboardActions';import ProgressBarComponent from'./Dashboard/components/ProgressBarComponent';import{Participant_breakdown}from'./Dashboard/Participant_breakdown';import{CircularProgressbarComponent}from'./Dashboard/CircularProgressbarComponent';import{getMonthName}from'./Utils/dashboard';import BrowseCategory from\"./BrowseCategory\";import Regions from\"./Regions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function MainCard(){var _user$Company,_user$Company2;var activeStudy=useSelector(function(state){return state.dashboard.activeStudy;});var userSubscriptions=useSelector(function(state){return state.dashboard.userSubscriptions;});var user=useSelector(function(state){return state.dashboard.userInfo;});var studyData=useSelector(function(state){return state.dashboard.studyData;});var participantData=useSelector(function(state){return state.dashboard.participantBreakDown;});var isSubscriber=checkSubscription(activeStudy,userSubscriptions);var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),modalShow=_React$useState2[0],setModalShow=_React$useState2[1];var regions=useSelector(function(state){return state.dashboard.regions;});var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),regionModalShow=_React$useState4[0],setRegionModalShow=_React$useState4[1];var getPeerGroup4or5State=sessionStorage.getItem(\"fetchedLevel4\");var getPeerGroup6State=sessionStorage.getItem(\"fetchedLevel6\");var getRegionName=sessionStorage.getItem(\"regionName\");var dispatch=useDispatch();var onSubscribeStudy=function onSubscribeStudy(){dispatch(subscribeStudy(activeStudy.ID));// dispatch(getParticipantBreakdown(activeStudy.ID));\n};var getChartTypeTitle=function getChartTypeTitle(typeId){switch(typeId){case 1:return'Monthly Percentage Change';case 2:return'Monthly Producer Average';case 3:return'Absolute Monthly Change';default:return null;}};var getSum=function getSum(total,num){return total+num.Value/100*total;};var getSumAverage=function getSumAverage(total,num){return total+num.Average/100*total;};var countCircleResult=function countCircleResult(){if((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===3||(activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===2){var _studyData$,_studyData;var firstValue=studyData&&studyData.length?(_studyData$=studyData[0])===null||_studyData$===void 0?void 0:_studyData$.Value:0;var mostRecentValue=studyData&&studyData.length?(_studyData=studyData[studyData.length-1])===null||_studyData===void 0?void 0:_studyData.Value:0;if(firstValue&&mostRecentValue){var calculateValue=mostRecentValue/firstValue*100-100;return parseFloat(calculateValue===null||calculateValue===void 0?void 0:calculateValue.toFixed(2));}return 0;}else if((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1){var _sum;var sum=studyData===null||studyData===void 0?void 0:studyData.reduce(getSum,100);var _toString=JSON.stringify(studyData);if(_toString===\"undefined\"||_toString===undefined||studyData.length===0){sum=0;}return parseFloat((_sum=sum)===null||_sum===void 0?void 0:_sum.toFixed(2));}if((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1&&studyData.length===0){return 0;}return 0;};var countCircleAverageResult=function countCircleAverageResult(){if((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===3||(activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===2){var _studyData$2,_studyData2;var firstValue=studyData&&studyData.length?(_studyData$2=studyData[0])===null||_studyData$2===void 0?void 0:_studyData$2.Average:0;var mostRecentValue=studyData&&studyData.length?(_studyData2=studyData[studyData.length-1])===null||_studyData2===void 0?void 0:_studyData2.Average:0;if(firstValue&&mostRecentValue){var calculateValue=mostRecentValue/firstValue*100-100;return parseFloat(calculateValue===null||calculateValue===void 0?void 0:calculateValue.toFixed(2));}return 0;}else if((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1){var _sum2;var sum=studyData===null||studyData===void 0?void 0:studyData.reduce(getSumAverage,100);var _toString2=JSON.stringify(studyData);if(_toString2===\"undefined\"||_toString2===undefined||studyData.length===0){sum=0;}return parseFloat((_sum2=sum)===null||_sum2===void 0?void 0:_sum2.toFixed(2));}return 0;};var getCircularProgressBarAverageValue=function getCircularProgressBarAverageValue(){if(circleResult>100||circleAverageResult>100){if(circleResult>circleAverageResult){return circleAverageResult/circleResult*100;}else{return 100;}}return Math.abs(circleAverageResult);};var getCircularProgressBarValue=function getCircularProgressBarValue(){if(circleResult>100||circleAverageResult>100){if(circleResult>circleAverageResult){return 100;}else{return circleResult/circleAverageResult*100;}}return Math.abs(circleResult);};var getUserLastMonthValue=function getUserLastMonthValue(){var typeId=activeStudy.TypeID;var lastStudyDataResult=studyData&&studyData[(studyData===null||studyData===void 0?void 0:studyData.length)-1];var value=(lastStudyDataResult===null||lastStudyDataResult===void 0?void 0:lastStudyDataResult.Value)||0;var average=(lastStudyDataResult===null||lastStudyDataResult===void 0?void 0:lastStudyDataResult.Average)||0;if(value&&average){if(typeId===1){var absoluteValue=Math.abs(value);var absoluteAverage=Math.abs(average);if(absoluteValue>100||absoluteAverage>100){var scale=Math.max(absoluteValue,absoluteAverage);return value/scale*100;}else{return value;}}else{var _scale=Math.max(value,average);return value/_scale*100;}}else{return 0;}};var getAverageLastMonthValue=function getAverageLastMonthValue(){var typeId=activeStudy.TypeID;var lastStudyDataResult=studyData&&studyData[(studyData===null||studyData===void 0?void 0:studyData.length)-1];var value=(lastStudyDataResult===null||lastStudyDataResult===void 0?void 0:lastStudyDataResult.Value)||0;var average=(lastStudyDataResult===null||lastStudyDataResult===void 0?void 0:lastStudyDataResult.Average)||0;if(value&&average){if(typeId===1){var absoluteValue=Math.abs(value);var absoluteAverage=Math.abs(average);if(absoluteValue>100||absoluteAverage>100){var scale=Math.max(absoluteValue,absoluteAverage);return average/scale*100;}else{return average;}}else{var _scale2=Math.max(value,average);return average/_scale2*100;}}else{return 0;}};var circleAverageResult=Math.round(countCircleAverageResult());var circleResult=Math.round(countCircleResult());var regionName=sessionStorage.getItem(\"regionName\");if(regionName!==null&&document.getElementById(\"regionTxt\")){document.getElementById(\"regionTxt\").innerHTML=regionName;}var regionClicked=function regionClicked(){setRegionModalShow(true);};// This function will display the month on th chart\nvar displayMonth;var displayMonth1=function displayMonth1(){var date=new Date().getDate();if(date>5){displayMonth=getMonthName(new Date().getMonth()-1);}else{displayMonth=getMonthName(new Date().getMonth()-2);}};displayMonth1();return activeStudy?/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm\",style:{color:'white'},children:[/*#__PURE__*/_jsx(Regions,{show:regionModalShow,onHide:function onHide(){return setRegionModalShow(false);}}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'0px'},className:\"row col-sm-12\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm-8\",style:{marginTop:\"-10px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',fontSize:'18px',color:'#8F96B4'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex'},children:/*#__PURE__*/_jsx(\"img\",{src:hierarchy,alt:\"\",onClick:function onClick(){return setModalShow(true);}})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'3px'},onClick:function onClick(){return setModalShow(true);},id:\"peerGroupText\",children:\"\".concat(activeStudy===null||activeStudy===void 0?void 0:activeStudy.ParentCategory,\", \").concat(activeStudy===null||activeStudy===void 0?void 0:activeStudy.Category)}),/*#__PURE__*/_jsx(BrowseCategory,{show:modalShow,onHide:function onHide(){return setModalShow(false);}})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:'15px',marginRight:'15px'},children:\"-\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"img\",{style:{marginRight:'3px'},src:mapPin,onClick:regionClicked,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{onClick:regionClicked,id:\"regionName\",children:getRegionDescription(activeStudy,regions)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"h3\",{style:{color:\"#FFFFFF\",fontSize:'30px'},children:[activeStudy===null||activeStudy===void 0?void 0:activeStudy.Name,/*#__PURE__*/_jsx(\"img\",{src:users,style:{paddingLeft:\"20px\"},alt:\"\"}),/*#__PURE__*/_jsxs(\"small\",{style:{fontSize:\"14px\",color:'#8F96B4'},children:[\" \",activeStudy===null||activeStudy===void 0?void 0:activeStudy.NumOfSubscribers]})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-4\",children:isSubscriber?/*#__PURE__*/_jsx(AddDataPopUp,{type:activeStudy.TypeID,className:\"input-group-sm float-end\"}):null}),/*#__PURE__*/_jsx(\"div\",{style:{padding:\"4px\"}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row col-sm-12\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-7\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",style:{color:'#A5ACCB',backgroundColor:'#1f2748',borderTopRightRadius:\"15px\",borderTopLeftRadius:\"15px\",borderBottomLeftRadius:\"15px\",borderBottomRightRadius:\"15px\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[getChartTypeTitle(activeStudy.TypeID),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-sm-12\",children:/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsxs(\"h5\",{style:{color:'white'},children:[\" \",displayMonth]})})})}),/*#__PURE__*/_jsx(LineChart,{data:studyData,name:user===null||user===void 0?void 0:(_user$Company=user.Company)===null||_user$Company===void 0?void 0:_user$Company.name,subscription:isSubscriber})]})})}),isSubscriber?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container col-sm\",children:[/*#__PURE__*/_jsx(\"h6\",{style:{color:'#A5ACCB'},children:\" ABOUT\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#A5ACCB'},children:activeStudy===null||activeStudy===void 0?void 0:activeStudy.About}),/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:\"2%\"}}),/*#__PURE__*/_jsx(\"small\",{style:{color:'#A5ACCB'},children:user===null||user===void 0?void 0:(_user$Company2=user.Company)===null||_user$Company2===void 0?void 0:_user$Company2.name}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:\"3px\"},children:\"\".concat(studyData&&studyData.length&&((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1?Math.round(studyData[studyData.length-1].Value):studyData[studyData.length-1].Value),\"\\n                                    \\n                                 \\n                                    \\n                                    \").concat((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1?'%':'')}),/*#__PURE__*/_jsx(ProgressBarComponent,{id:\"user-progres-bar\",value:getUserLastMonthValue()}),/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:\"5%\"}}),/*#__PURE__*/_jsx(\"small\",{style:{color:'#A5ACCB'},children:\"Industry Average\"}),/*#__PURE__*/_jsx(\"p\",{style:{marginBottom:\"3px\",verticalAlign:\"bottom\"},children:\"\".concat(studyData&&studyData.length&&((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1?Math.round(studyData[studyData.length-1].Average):studyData[studyData.length-1].Average),\"\\n                                    \").concat((activeStudy===null||activeStudy===void 0?void 0:activeStudy.TypeID)===1?'%':'')}),/*#__PURE__*/_jsx(ProgressBarComponent,{id:\"industry-progres-bar\",value:getAverageLastMonthValue()})]})}):/*#__PURE__*/_jsx(SubscribeToStudy,{studyAbout:activeStudy===null||activeStudy===void 0?void 0:activeStudy.About,onSubscribe:onSubscribeStudy})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{style:{paddingBottom:\"17px\"}}),/*#__PURE__*/_jsxs(\"div\",{className:\"row col-sm-12\",children:[/*#__PURE__*/_jsx(Participant_breakdown,{data:participantData,unlock:isSubscriber}),/*#__PURE__*/_jsx(CircularProgressbarComponent,{value:getCircularProgressBarValue(),text:circleResult,counterClockwise:circleResult<0?true:false,months:studyData===null||studyData===void 0?void 0:studyData.length,pathColor:'rgba(0, 226, 125)',trailColor:circleResult<0?'#553b65':'#353b65',title:\"Change from start of this period\",unlock:isSubscriber,donutChartId:\"donutChart1\",customText:\"Your\"}),/*#__PURE__*/_jsx(CircularProgressbarComponent,{value:getCircularProgressBarAverageValue(),text:circleAverageResult,counterClockwise:circleAverageResult<0?true:false,months:studyData===null||studyData===void 0?void 0:studyData.length,pathColor:'rgba(101,133,255)',trailColor:circleAverageResult<0?'#553b65':'#353b65',title:\"Change from start of this period\",unlock:isSubscriber,donutChartId:\"donutChart2\",customText:\"Peer Group\"})]})]})]})/* If the study is not activated*/:/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",style:{color:'white'},children:/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0px'},className:\"row col-sm-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"col-sm-8\",style:{marginTop:\"-10px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',fontSize:'18px',color:'#8F96B4'},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:'flex'},children:/*#__PURE__*/_jsx(\"img\",{src:hierarchy,alt:\"\",onClick:function onClick(){return setModalShow(true);}})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{id:\"peerGroupTitle\",style:{marginLeft:'3px'},onClick:function onClick(){return setModalShow(true);},children:[/*#__PURE__*/_jsxs(\"span\",{id:\"level5Text\",children:[\" \",getPeerGroup4or5State,\", \"]}),/*#__PURE__*/_jsx(\"span\",{id:\"level6Text\",children:getPeerGroup6State})]}),/*#__PURE__*/_jsx(BrowseCategory,{show:modalShow,onHide:function onHide(){return setModalShow(false);}})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:'15px',marginRight:'15px'},children:\"-\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"img\",{style:{marginRight:'3px'},src:mapPin,onClick:function onClick(){return setRegionModalShow(true);},alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{id:\"regionTxt\",onClick:function onClick(){return setRegionModalShow(true);},children:getRegionName}),/*#__PURE__*/_jsx(Regions,{show:regionModalShow,onHide:function onHide(){return setRegionModalShow(false);}})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',fontSize:'18px',color:'#8F96B4',marginLeft:\"-23.52px\",width:\"1230px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"20px\"},children:/*#__PURE__*/_jsx(\"div\",{style:{borderLeft:\"2px solid #313B65\",marginTop:\"740px\",marginLeft:\"-1px\",height:\"350px\"}})}),/*#__PURE__*/_jsx(\"img\",{src:fakeImage3,style:{marginLeft:\"10px\",width:\"1230px\"},alt:\"\"})]})]})})});}export default MainCard;/*\n\n* */","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/MainCard.js"],"names":["React","useState","CircularProgressbar","buildStyles","Doughnut","LineChart","LockedLineChart","AddDataPopUp","getRegionDescription","checkSubscription","useSelector","useDispatch","SubscribeToStudy","getParticipantBreakdown","subscribeStudy","ProgressBarComponent","Participant_breakdown","CircularProgressbarComponent","getMonthName","BrowseCategory","Regions","MainCard","activeStudy","state","dashboard","userSubscriptions","user","userInfo","studyData","participantData","participantBreakDown","isSubscriber","modalShow","setModalShow","regions","regionModalShow","setRegionModalShow","getPeerGroup4or5State","sessionStorage","getItem","getPeerGroup6State","getRegionName","dispatch","onSubscribeStudy","ID","getChartTypeTitle","typeId","getSum","total","num","Value","getSumAverage","Average","countCircleResult","TypeID","firstValue","length","mostRecentValue","calculateValue","parseFloat","toFixed","sum","reduce","toString","JSON","stringify","undefined","countCircleAverageResult","getCircularProgressBarAverageValue","circleResult","circleAverageResult","Math","abs","getCircularProgressBarValue","getUserLastMonthValue","lastStudyDataResult","value","average","absoluteValue","absoluteAverage","scale","max","getAverageLastMonthValue","round","regionName","document","getElementById","innerHTML","regionClicked","displayMonth","displayMonth1","date","Date","getDate","getMonth","color","marginBottom","marginTop","display","fontSize","hierarchy","marginLeft","ParentCategory","Category","marginRight","mapPin","Name","users","paddingLeft","NumOfSubscribers","padding","backgroundColor","borderTopRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderBottomRightRadius","Company","name","About","paddingTop","verticalAlign","paddingBottom","width","borderLeft","height","fakeImage3"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {Doughnut} from 'react-chartjs-2';\nimport {LineChart, LockedLineChart} from '../src/chart/line';\nimport AddDataPopUp from \"./AddDataPopup\";\nimport hierarchy from \"./Styleguide/hierarchy.svg\"\nimport mapPin from \"./Styleguide/map-pin.svg\"\nimport fakeImage3 from \"./Styleguide/fake_dashboard_3.svg\"\nimport users from \"./Styleguide/users.svg\";\nimport {getRegionDescription, checkSubscription} from './Utils/dashboard';\nimport {useSelector, useDispatch} from 'react-redux';\nimport SubscribeToStudy from './Dashboard/SubscribeToStudy';\nimport {getParticipantBreakdown, subscribeStudy} from './store/dashboardActions';\nimport ProgressBarComponent from './Dashboard/components/ProgressBarComponent';\nimport {Participant_breakdown} from './Dashboard/Participant_breakdown';\nimport {CircularProgressbarComponent} from './Dashboard/CircularProgressbarComponent';\nimport {getMonthName} from './Utils/dashboard';\nimport BrowseCategory from \"./BrowseCategory\";\nimport Regions from \"./Regions\";\n\n\nfunction MainCard() {\n    const activeStudy = useSelector(state => state.dashboard.activeStudy);\n    const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n    const user = useSelector(state => state.dashboard.userInfo);\n\n    const studyData = useSelector(state => state.dashboard.studyData);\n    const participantData = useSelector(state => state.dashboard.participantBreakDown);\n\n    const isSubscriber = checkSubscription(activeStudy, userSubscriptions);\n\n    const [modalShow, setModalShow] = React.useState(false);\n    const regions = useSelector(state => state.dashboard.regions);\n    const [regionModalShow, setRegionModalShow] = React.useState(false);\n\n    let getPeerGroup4or5State = sessionStorage.getItem(\"fetchedLevel4\");\n    let getPeerGroup6State = sessionStorage.getItem(\"fetchedLevel6\");\n    let getRegionName = sessionStorage.getItem(\"regionName\");\n\n    const dispatch = useDispatch();\n    const onSubscribeStudy = () => {\n        dispatch(subscribeStudy(activeStudy.ID));\n        // dispatch(getParticipantBreakdown(activeStudy.ID));\n    };\n\n    const getChartTypeTitle = typeId => {\n        switch (typeId) {\n            case 1:\n                return 'Monthly Percentage Change';\n            case 2:\n                return 'Monthly Producer Average';\n            case 3:\n                return 'Absolute Monthly Change';\n            default:\n                return null;\n        }\n    }\n\n    const getSum = (total, num) => {\n        return total + (num.Value / 100) * total;\n    }\n\n    const getSumAverage = (total, num) => {\n        return total + (num.Average / 100) * total;\n    }\n\n    const countCircleResult = () => {\n\n        if (activeStudy?.TypeID === 3 || activeStudy?.TypeID === 2) {\n            const firstValue = studyData && studyData.length ? studyData[0]?.Value : 0;\n            const mostRecentValue = studyData && studyData.length ? studyData[studyData.length - 1]?.Value : 0;\n            if (firstValue && mostRecentValue) {\n                let calculateValue = (((mostRecentValue / firstValue) * 100) - 100);\n                return parseFloat(calculateValue?.toFixed(2));\n            }\n            return 0;\n        } else if (activeStudy?.TypeID === 1) {\n            let sum = studyData?.reduce(getSum, 100);\n            let toString = JSON.stringify(studyData);\n\n            if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n                sum = 0;\n            }\n            return parseFloat(sum?.toFixed(2));\n        }\n\n        if (activeStudy?.TypeID === 1 && studyData.length === 0) {\n            return 0;\n        }\n        return 0;\n    }\n\n    const countCircleAverageResult = () => {\n        if (activeStudy?.TypeID === 3 || activeStudy?.TypeID === 2) {\n            const firstValue = studyData && studyData.length ? studyData[0]?.Average : 0;\n            const mostRecentValue = studyData && studyData.length ? studyData[studyData.length - 1]?.Average : 0;\n            if (firstValue && mostRecentValue) {\n                let calculateValue = (((mostRecentValue / firstValue) * 100) - 100);\n                return parseFloat(calculateValue?.toFixed(2));\n            }\n            return 0;\n        } else if (activeStudy?.TypeID === 1) {\n            let sum = studyData?.reduce(getSumAverage, 100);\n\n            let toString = JSON.stringify(studyData);\n\n            if (toString === \"undefined\" || toString === undefined || studyData.length === 0) {\n                sum = 0;\n            }\n\n            return parseFloat(sum?.toFixed(2));\n        }\n        return 0;\n    }\n\n    const getCircularProgressBarAverageValue = () => {\n        if (circleResult > 100 || circleAverageResult > 100) {\n            if (circleResult > circleAverageResult) {\n                return (circleAverageResult / circleResult) * 100;\n            } else {\n                return 100;\n            }\n        }\n\n        return Math.abs(circleAverageResult)\n    }\n\n    const getCircularProgressBarValue = () => {\n\n        if (circleResult > 100 || circleAverageResult > 100) {\n            if (circleResult > circleAverageResult) {\n                return 100;\n            } else {\n                return (circleResult / circleAverageResult) * 100;\n            }\n        }\n        return Math.abs(circleResult)\n    }\n\n    const getUserLastMonthValue = () => {\n        const typeId = activeStudy.TypeID;\n        const lastStudyDataResult = studyData && studyData[studyData?.length - 1];\n        const value = lastStudyDataResult?.Value || 0;\n        const average = lastStudyDataResult?.Average || 0;\n\n        if (value && average) {\n            if (typeId === 1) {\n                const absoluteValue = Math.abs(value);\n                const absoluteAverage = Math.abs(average);\n                if (absoluteValue > 100 || absoluteAverage > 100) {\n                    const scale = Math.max(absoluteValue, absoluteAverage);\n                    return (value / scale) * 100;\n                } else {\n                    return value;\n                }\n\n            } else {\n                const scale = Math.max(value, average);\n                return (value / scale) * 100;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    const getAverageLastMonthValue = () => {\n        const typeId = activeStudy.TypeID;\n        const lastStudyDataResult = studyData && studyData[studyData?.length - 1];\n        const value = lastStudyDataResult?.Value || 0;\n        const average = lastStudyDataResult?.Average || 0;\n\n        if (value && average) {\n            if (typeId === 1) {\n                const absoluteValue = Math.abs(value);\n                const absoluteAverage = Math.abs(average);\n                if (absoluteValue > 100 || absoluteAverage > 100) {\n                    const scale = Math.max(absoluteValue, absoluteAverage);\n                    return (average / scale) * 100;\n                } else {\n                    return average;\n                }\n            } else {\n                const scale = Math.max(value, average);\n                return (average / scale) * 100;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    const circleAverageResult = Math.round(countCircleAverageResult());\n    const circleResult = Math.round(countCircleResult());\n\n    let regionName = sessionStorage.getItem(\"regionName\");\n    if (regionName !== null && document.getElementById(\"regionTxt\")) {\n        document.getElementById(\"regionTxt\").innerHTML = regionName\n    }\n    const regionClicked = () => {\n        setRegionModalShow(true);\n    }\n\n    // This function will display the month on th chart\n    let displayMonth;\n    const displayMonth1 = () => {\n        let date = new Date().getDate();\n        if (date > 5) {\n            displayMonth = getMonthName(new Date().getMonth() - 1);\n        } else {\n            displayMonth = getMonthName(new Date().getMonth() - 2);\n        }\n    }\n    displayMonth1();\n\n    return (\n        activeStudy ? <div className=\"col-sm\"\n                           style={{\n                               color: 'white',\n\n                           }}>\n                <Regions show={regionModalShow} onHide={() => setRegionModalShow(false)}/>\n                <div style={{marginBottom: '0px'}} className=\"row col-sm-12\">\n                    <div className=\"col-sm-8\" style={{marginTop: \"-10px\"}}>\n                        <div style={{display: 'flex', fontSize: '18px', color: '#8F96B4'}}>\n                            <div style={{display: 'flex'}}>\n                                <img src={hierarchy} alt=\"\"\n                                     onClick={() => setModalShow(true)}\n                                />\n                            </div>\n\n                            <div>\n                                <span style={{marginLeft: '3px'}}\n                                      onClick={() => setModalShow(true)}\n                                      id=\"peerGroupText\"\n                                >{`${activeStudy?.ParentCategory}, ${activeStudy?.Category}`}\n                            </span>\n                                <BrowseCategory show={modalShow} onHide={() => setModalShow(false)}\n                                />\n                            </div>\n                            <div style={{marginLeft: '15px', marginRight: '15px'}}>-</div>\n                            <div style={{display: 'flex'}}>\n                                <img style={{marginRight: '3px'}}\n                                     src={mapPin}\n                                     onClick={regionClicked}\n                                     alt=\"\"/>\n\n                                <div onClick={regionClicked} id=\"regionName\">\n                                    {getRegionDescription(activeStudy, regions)}</div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <h3 style={{color: \"#FFFFFF\", fontSize: '30px'}}>\n                                {activeStudy?.Name}\n                                <img src={users} style={{paddingLeft: \"20px\"}} alt=\"\"/>\n                                <small style={{\n                                    fontSize: \"14px\",\n                                    color: '#8F96B4'\n                                }}> {activeStudy?.NumOfSubscribers}</small>\n                            </h3>\n                        </div>\n                    </div>\n                    <div className=\"col-sm-4\">\n\n                        {isSubscriber ?\n                            <AddDataPopUp type={activeStudy.TypeID} className=\"input-group-sm float-end\"/> : null}\n                    </div>\n                    <div style={{padding: \"4px\"}}></div>\n\n                </div>\n                <div>\n                    <div className='row col-sm-12'>\n                        <div className='col-sm-7'>\n                            <div className='card' style={{\n                                color: '#A5ACCB',\n                                backgroundColor: '#1f2748',\n                                borderTopRightRadius: \"15px\",\n                                borderTopLeftRadius: \"15px\",\n                                borderBottomLeftRadius: \"15px\",\n                                borderBottomRightRadius: \"15px\",\n                            }}>\n                                <div className='card-body'>\n                                    {getChartTypeTitle(activeStudy.TypeID)}\n\n                                    <div className=\"row\">\n                                        <div className=\"col-sm-12\">\n                                            <b><h5 style={{color: 'white'}}> {displayMonth}</h5>\n                                            </b>\n                                        </div>\n                                    </div>\n\n                                    {/*{isSubscriber ? <LineChart data={studyData} name={user?.Company?.name}/> :*/}\n                                    {/*    <LockedLineChart/>}*/}\n\n                                    <LineChart data={studyData} name={user?.Company?.name} subscription={isSubscriber}/>\n                                </div>\n                            </div>\n                        </div>\n                        {isSubscriber ? <>\n                            <div className='container col-sm'>\n                                <h6 style={{color: '#A5ACCB'}}> ABOUT</h6>\n                                <br/>\n                                <p style={{color: '#A5ACCB'}}>\n                                    {activeStudy?.About}\n                                </p>\n                                <div style={{paddingTop: \"2%\"}}></div>\n                                <small style={{color: '#A5ACCB'}}>{user?.Company?.name}</small>\n                                <p style={{marginBottom: \"3px\"}}>{`${\n                                    studyData &&\n                                    studyData.length &&\n                                    (activeStudy?.TypeID === 1 ? Math.round(studyData[studyData.length - 1].Value) : studyData[studyData.length - 1].Value)}\n                                    \n                                 \n                                    \n                                    ${activeStudy?.TypeID === 1 ? '%' : ''}`}</p>\n                                <ProgressBarComponent id=\"user-progres-bar\" value={getUserLastMonthValue()}/>\n\n                                <div style={{paddingTop: \"5%\"}}></div>\n                                <small style={{color: '#A5ACCB'}}>Industry Average</small>\n                                {/* <p color={{ color: \"white\" }}>{`-20%`}</p> */}\n                                <p style={{\n                                    marginBottom: \"3px\",\n                                    verticalAlign: \"bottom\"\n                                }}>{`${\n                                    studyData &&\n                                    studyData.length &&\n                                    (activeStudy?.TypeID === 1 ? Math.round(studyData[studyData.length - 1].Average) : studyData[studyData.length - 1].Average)}\n                                    ${activeStudy?.TypeID === 1 ? '%' : ''}`}</p>\n                                <ProgressBarComponent id=\"industry-progres-bar\" value={getAverageLastMonthValue()}/>\n\n\n                            </div>\n                        </> : <SubscribeToStudy studyAbout={activeStudy?.About} onSubscribe={onSubscribeStudy}/>}\n                    </div>\n                    <br/>\n                    <div style={{paddingBottom: \"17px\"}}></div>\n                    <div className='row col-sm-12'>\n\n                        {/*{isSubscriber ?*/}\n                        {/*    <Participant_breakdown data={participantData}/> : null}*/}\n\n                        <Participant_breakdown data={participantData} unlock={isSubscriber}/>\n\n                        {/* Circle 1*/}\n                        <CircularProgressbarComponent\n                            value={getCircularProgressBarValue()}\n                            text={circleResult}\n                            counterClockwise={circleResult < 0 ? true : false}\n                            months={studyData?.length}\n                            pathColor={'rgba(0, 226, 125)'}\n                            trailColor={circleResult < 0 ? '#553b65' : '#353b65'}\n                            title='Change from start of this period'\n                            unlock={isSubscriber}\n                            donutChartId=\"donutChart1\"\n                            customText=\"Your\"\n                        />\n                        {/* Circle 2*/}\n                        <CircularProgressbarComponent\n                            value={getCircularProgressBarAverageValue()}\n                            text={circleAverageResult}\n                            counterClockwise={circleAverageResult < 0 ? true : false}\n                            months={studyData?.length}\n                            pathColor={'rgba(101,133,255)'}\n                            trailColor={circleAverageResult < 0 ? '#553b65' : '#353b65'}\n                            title='Change from start of this period'\n                            unlock={isSubscriber}\n                            donutChartId=\"donutChart2\"\n                            customText=\"Peer Group\"\n                        />\n                    </div>\n                </div>\n            </div>\n            /* If the study is not activated*/\n            : <div className=\"col-sm\" style={{color: 'white',}}>\n                <div style={{marginBottom: '0px'}} className=\"row col-sm-12\">\n                    <div className=\"col-sm-8\" style={{marginTop: \"-10px\"}}>\n                        <div style={{display: 'flex', fontSize: '18px', color: '#8F96B4'}}>\n                            <div style={{display: 'flex'}}>\n                                <img src={hierarchy} alt=\"\"\n                                     onClick={() => setModalShow(true)}\n                                />\n                            </div>\n                            <div>\n                                <span id=\"peerGroupTitle\" style={{marginLeft: '3px'}}\n                                      onClick={() => setModalShow(true)}>\n                                    <span id=\"level5Text\"> {getPeerGroup4or5State}, </span>\n                                    <span id=\"level6Text\">{getPeerGroup6State}</span>\n\n                                </span>\n                                <BrowseCategory show={modalShow} onHide={() => setModalShow(false)}\n                                />\n                            </div>\n\n                            <div style={{marginLeft: '15px', marginRight: '15px'}}>-</div>\n                            <div style={{display: 'flex'}}>\n                                <img style={{marginRight: '3px'}}\n                                     src={mapPin}\n                                     onClick={() => setRegionModalShow(true)} alt=\"\"/>\n\n                                <div id=\"regionTxt\" onClick={() => setRegionModalShow(true)}>\n                                    {getRegionName}\n                                </div>\n                                <Regions show={regionModalShow} onHide={() => setRegionModalShow(false)}/>\n                            </div>\n                        </div>\n\n                        <div style={{\n                            display: 'flex', fontSize: '18px',\n                            color: '#8F96B4', marginLeft: \"-23.52px\",\n                            width: \"1230px\",\n                        }}>\n\n                            {/* Blue line*/}\n                            <div style={{width: \"20px\"}}>\n                                <div style={{\n                                    borderLeft: \"2px solid #313B65\",\n                                    marginTop: \"740px\",\n                                    marginLeft: \"-1px\",\n                                    height: \"350px\",\n                                }}/>\n                            </div>\n                            {/* Blue line*/}\n\n                            {/* Fake image */}\n                            <img\n                                src={fakeImage3}\n                                style={{marginLeft: \"10px\", width: \"1230px\"}}\n                                alt=\"\"/>\n                            {/* Fake image */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default MainCard;\n\n/*\n\n* */\n"]},"metadata":{},"sourceType":"module"}