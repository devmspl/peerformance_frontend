{"ast":null,"code":"import axios from 'axios';\n\nlet _ = require('lodash');\n\nlet url = `/quicklink`;\nlet localStorageQuicklink;\n\nfunction getQuickLinks(token) {\n  axios.get(url, {\n    headers: {\n      'authorization': token\n    }\n  }).then(function (response) {\n    // handle success\n    // console.log(fetchedData)\n    window.localStorage.removeItem('quickLinks');\n    let quickLinks = JSON.stringify(response.data.quickLinks);\n    window.localStorage.setItem('quickLinks', quickLinks);\n    localStorageQuicklink = JSON.parse(localStorage.getItem('quickLinks')); // we can return this\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n}\n\nfunction loadData(token) {\n  // Get QuickLinks\n  getQuickLinks(token); // fetch time\n\n  let localStorageTime = JSON.parse(localStorage.getItem('categoryTime'));\n  let fetchedObject = JSON.parse(localStorage.getItem('categories'));\n  let url = `/studygroups`;\n\n  if (fetchedObject !== null && fetchedObject !== undefined) {\n    url = `/studygroups?time=` + localStorageTime;\n  }\n\n  console.log(url);\n  axios.get(url).then(function (response) {\n    // handle success\n    if (response.data.status === 'new') {\n      // removing the old entries from local storage\n      console.log('new entries received');\n      window.localStorage.removeItem('categoryTime');\n      window.localStorage.removeItem('categories');\n      let categories = JSON.stringify(response.data.categories);\n      let categoryTime = JSON.stringify(response.data.time);\n      categories = categories.replace(/\\\\r/g, '');\n      window.localStorage.setItem('categoryTime', categoryTime);\n      window.localStorage.setItem('categories', categories);\n      localStorageTime = JSON.parse(localStorage.getItem('categoryTime'));\n      fetchedObject = JSON.parse(localStorage.getItem('categories'));\n      window.location.reload();\n    } else {// do nothing\n    }\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).then(function () {// always executed\n  });\n  return fetchedObject;\n}\n\nexport default loadData;","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Utils/category.js"],"names":["axios","_","require","url","localStorageQuicklink","getQuickLinks","token","get","headers","then","response","window","localStorage","removeItem","quickLinks","JSON","stringify","data","setItem","parse","getItem","catch","error","console","log","loadData","localStorageTime","fetchedObject","undefined","status","categories","categoryTime","time","replace","location","reload"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nlet _ = require('lodash');\nlet url = `/quicklink`;\n\nlet localStorageQuicklink;\n\n\nfunction getQuickLinks(token) {\n    axios\n        .get(url,\n            {\n            headers: {\n                'authorization': token\n            }\n        })\n        .then(function (response) {\n            // handle success\n            // console.log(fetchedData)\n            window.localStorage.removeItem('quickLinks');\n            let quickLinks = JSON.stringify(response.data.quickLinks);\n            window.localStorage.setItem('quickLinks', quickLinks);\n\n            localStorageQuicklink = JSON.parse(localStorage.getItem('quickLinks')); // we can return this\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n\n}\nfunction loadData(token) {\n\n    // Get QuickLinks\n    getQuickLinks(token);\n\n    // fetch time\n    let localStorageTime = JSON.parse(localStorage.getItem('categoryTime'));\n    let fetchedObject = JSON.parse(localStorage.getItem('categories'));\n\n    let url = `/studygroups`;\n    if (fetchedObject !== null && fetchedObject !== undefined) {\n        url = `/studygroups?time=` + localStorageTime;\n    }\n    console.log(url);\n    axios\n        .get(url)\n        .then(function (response) {\n            // handle success\n            if (response.data.status === 'new') {\n                // removing the old entries from local storage\n                console.log('new entries received');\n                window.localStorage.removeItem('categoryTime');\n                window.localStorage.removeItem('categories');\n\n                let categories = JSON.stringify(response.data.categories);\n                let categoryTime = JSON.stringify(response.data.time);\n                categories = categories.replace(/\\\\r/g, '');\n\n                window.localStorage.setItem('categoryTime', categoryTime);\n                window.localStorage.setItem('categories', categories);\n                localStorageTime = JSON.parse(localStorage.getItem('categoryTime'));\n                fetchedObject = JSON.parse(localStorage.getItem('categories'));\n                window.location.reload();\n            } else {\n                // do nothing\n            }\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n    return fetchedObject;\n}\n\nexport default loadData;\n"]},"metadata":{},"sourceType":"module"}