{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Dashboard/AddDataAbsoluteNumberType.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { getMonthName, getCurrentMonth } from '../Utils/dashboard';\nimport roundedArrow from \"../Styleguide/icons/rounded-arrow.svg\";\nimport greenCheck from \"../Styleguide/icons/green-check.svg\";\nimport leftArrow from \"../Styleguide/icons/left-arrow.svg\";\nimport crossIcon from \"../Styleguide/x.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddDataAbsoluteNumberType = _ref => {\n  _s();\n\n  let {\n    handleClose,\n    addData\n  } = _ref;\n  const [submissionValue, setSubmissionValue] = useState(0);\n  const submittedValue = submissionValue ? parseFloat(submissionValue).toFixed(2) : null;\n\n  const validateValue = (value, setValue) => {\n    if (!isNaN(value)) {\n      setValue(value);\n    }\n  };\n\n  const addAbsoluteData = e => {\n    e.preventDefault();\n    addData(submittedValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    onSubmit: addAbsoluteData,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-data-popup-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-data-popup-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-data-popup-header-left\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \"Result Calculator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"description\",\n              children: \"Calculate a percentage applied to the users data submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: crossIcon,\n            alt: \"x\",\n            className: \"cross\",\n            onClick: handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-data-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-data-popup-content-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: getMonthName(getCurrentMonth())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"add-data-popup-content-label-right\",\n            children: \"Absolute number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mt-2\",\n          type: \"text\",\n          id: \"submissionValue\",\n          name: \"submissionValue\",\n          value: submissionValue ? submissionValue : '',\n          onChange: e => validateValue(e.target.value, setSubmissionValue),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-message\",\n          children: \"Figures entered above will not be shared with Peerformance \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-data-submit-btn\",\n            disabled: !submittedValue,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: roundedArrow,\n              alt: \"rounded-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 30\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add to Submission\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-data-counter\",\n            children: submittedValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-data-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: greenCheck,\n            alt: \"check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Save date on device for future use\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AddDataAbsoluteNumberType, \"WiE3T+zyI92O+xdztD9jZyVkyDE=\");\n\n_c = AddDataAbsoluteNumberType;\nexport default AddDataAbsoluteNumberType;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddDataAbsoluteNumberType\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Dashboard/AddDataAbsoluteNumberType.jsx"],"names":["React","useState","getMonthName","getCurrentMonth","AddDataAbsoluteNumberType","handleClose","addData","submissionValue","setSubmissionValue","submittedValue","parseFloat","toFixed","validateValue","value","setValue","isNaN","addAbsoluteData","e","preventDefault","crossIcon","target","roundedArrow","greenCheck"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { getMonthName, getCurrentMonth } from '../Utils/dashboard';\nimport roundedArrow from '../Styleguide/icons/rounded-arrow.svg';\nimport greenCheck from '../Styleguide/icons/green-check.svg';\nimport leftArrow from '../Styleguide/icons/left-arrow.svg';\nimport crossIcon from '../Styleguide/x.svg';\n\n const AddDataAbsoluteNumberType = ({handleClose, addData}) => {\n    const [submissionValue, setSubmissionValue] = useState(0);\n\n    const submittedValue = submissionValue ? parseFloat(submissionValue).toFixed(2) : null;\n\n    const validateValue = (value, setValue) => {\n        if(!isNaN(value)) {\n            setValue(value);\n        }\n    };\n\n    const addAbsoluteData = e => {\n        e.preventDefault();\n        addData(submittedValue);\n    };\n\n     return (\n         <form noValidate onSubmit={addAbsoluteData}>\n             <div className=\"add-data-popup-container\">\n                 <div className=\"add-data-popup-header\">\n                     <div className=\"add-data-popup-header-left\">\n                         <div>\n                             <span className='title'>Result Calculator</span>\n                             <span className='description'>\n                                 Calculate a percentage applied to the users data submission</span>\n                         </div>\n                     </div>\n                     <div>\n                         <img src={crossIcon} alt=\"x\" className=\"cross\" onClick={handleClose} />\n                     </div>\n                 </div>\n                 <div className=\"add-data-popup-content\">\n                     <div className=\"add-data-popup-content-label\">\n                         <span>{getMonthName(getCurrentMonth())}</span>\n                         <span className=\"add-data-popup-content-label-right\">Absolute number</span>\n                     </div>\n                     <input\n                         className='form-control mt-2'\n                         type='text'\n                         id='submissionValue'\n                         name='submissionValue'\n                         value={submissionValue ? submissionValue : ''}\n                         onChange={e => validateValue(e.target.value, setSubmissionValue)}\n                         required\n                     />\n                     <span className=\"red-message\">Figures entered above will not be shared with Peerformance </span>\n                     <div className=\"buttons-row\">\n                         <button className=\"add-data-submit-btn\" disabled={!submittedValue}>\n                             <img src={roundedArrow} alt=\"rounded-arrow\" /> <span>Add to Submission</span>\n                         </button>\n                         <div className=\"add-data-counter\">{submittedValue}</div>\n                     </div>\n                     <div className=\"add-data-footer\">\n                         <img src={greenCheck} alt=\"check\" />\n                         <span>Save date on device for future use</span>\n                     </div>\n                 </div>\n             </div>\n         </form>\n     );\n}\n\nexport default AddDataAbsoluteNumberType;"]},"metadata":{},"sourceType":"module"}