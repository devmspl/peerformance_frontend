{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/LeftSideNav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStudyData, getStudies, updateLastPeerGroup, getParticipantBreakdown, updateLastRegion } from './store/dashboardActions'; // import { getStudyData } from './store/dashboardActions';\n\nimport { dashboardActions } from './store/dashboard';\nimport ActiveStudies from './Dashboard/ActiveStudies';\nimport AvailableStudies from './Dashboard/AvailableStudies';\nimport QueuedStudies from './Dashboard/QueuedStudies'; // handle click event of logout button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftSideNav(props) {\n  _s();\n\n  const availableStudies = useSelector(state => state.dashboard.availableStudies);\n  const queuedStudies = useSelector(state => state.dashboard.queuedStudies);\n  const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n  const activeStudy = useSelector(state => state.dashboard.activeStudy);\n  const dispatch = useDispatch();\n\n  const handlingStudyClick = study => {\n    dispatch(dashboardActions.setActiveStudy(study));\n    const isSubscriber = userSubscriptions.some(subscription => subscription.StudyID === study.ID);\n\n    if (isSubscriber) {\n      dispatch(getStudyData(study.ID));\n      dispatch(getParticipantBreakdown(study === null || study === void 0 ? void 0 : study.ID));\n    } else {\n      dispatch(dashboardActions.setStudyData(null));\n    }\n  };\n\n  const onActiveStudyClick = subscription => {\n    dispatch(getStudies(subscription === null || subscription === void 0 ? void 0 : subscription.PeerGroupID, subscription === null || subscription === void 0 ? void 0 : subscription.RegionID, subscription === null || subscription === void 0 ? void 0 : subscription.StudyID));\n    dispatch(updateLastPeerGroup(subscription === null || subscription === void 0 ? void 0 : subscription.PeerGroupID));\n    dispatch(getParticipantBreakdown(subscription === null || subscription === void 0 ? void 0 : subscription.StudyID));\n    sessionStorage.setItem(\"regionId\", subscription === null || subscription === void 0 ? void 0 : subscription.RegionID);\n    dispatch(updateLastRegion(subscription === null || subscription === void 0 ? void 0 : subscription.RegionID));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: \"13px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(ActiveStudies, {\n      activeStudies: userSubscriptions,\n      activeStudy: activeStudy,\n      onActiveStudyClick: onActiveStudyClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AvailableStudies, {\n      activeStudy: activeStudy,\n      availableStudies: availableStudies,\n      userSubscriptions: userSubscriptions,\n      onStudyClick: handlingStudyClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QueuedStudies, {\n      activeStudy: activeStudy,\n      queuedStudies: queuedStudies,\n      userSubscriptions: userSubscriptions,\n      onStudyClick: handlingStudyClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeftSideNav, \"kzueWmYuCevdYT9AC9x1+5x+OMA=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = LeftSideNav;\nexport default LeftSideNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSideNav\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/LeftSideNav.js"],"names":["React","useSelector","useDispatch","getStudyData","getStudies","updateLastPeerGroup","getParticipantBreakdown","updateLastRegion","dashboardActions","ActiveStudies","AvailableStudies","QueuedStudies","LeftSideNav","props","availableStudies","state","dashboard","queuedStudies","userSubscriptions","activeStudy","dispatch","handlingStudyClick","study","setActiveStudy","isSubscriber","some","subscription","StudyID","ID","setStudyData","onActiveStudyClick","PeerGroupID","RegionID","sessionStorage","setItem","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n    getStudyData,\n    getStudies,\n    updateLastPeerGroup,\n    getParticipantBreakdown, updateLastRegion\n} from './store/dashboardActions';\n// import { getStudyData } from './store/dashboardActions';\nimport {dashboardActions} from './store/dashboard';\nimport ActiveStudies from './Dashboard/ActiveStudies'\nimport AvailableStudies from './Dashboard/AvailableStudies';\nimport QueuedStudies from './Dashboard/QueuedStudies';\n\n// handle click event of logout button\n\nfunction LeftSideNav(props) {\n    const availableStudies = useSelector(state => state.dashboard.availableStudies);\n    const queuedStudies = useSelector(state => state.dashboard.queuedStudies);\n    const userSubscriptions = useSelector(state => state.dashboard.userSubscriptions);\n    const activeStudy = useSelector(state => state.dashboard.activeStudy);\n    const dispatch = useDispatch();\n\n\n    const handlingStudyClick = study => {\n        dispatch(dashboardActions.setActiveStudy(study));\n        const isSubscriber = userSubscriptions.some(subscription => subscription.StudyID === study.ID);\n        if (isSubscriber) {\n            dispatch(getStudyData(study.ID));\n            dispatch(getParticipantBreakdown(study?.ID))\n        } else {\n            dispatch(dashboardActions.setStudyData(null));\n        }\n    };\n\n    const onActiveStudyClick = subscription => {\n        dispatch(getStudies(subscription?.PeerGroupID, subscription?.RegionID, subscription?.StudyID));\n        dispatch(updateLastPeerGroup(subscription?.PeerGroupID));\n        dispatch(getParticipantBreakdown(subscription?.StudyID))\n        sessionStorage.setItem(\"regionId\", subscription?.RegionID);\n        dispatch(updateLastRegion(subscription?.RegionID));\n    }\n\n    return (\n        <div style={{marginLeft: \"13px\"}}>\n            <ActiveStudies\n                activeStudies={userSubscriptions}\n                activeStudy={activeStudy}\n                onActiveStudyClick={onActiveStudyClick}\n            />\n            <AvailableStudies\n                activeStudy={activeStudy}\n                availableStudies={availableStudies}\n                userSubscriptions={userSubscriptions}\n                onStudyClick={handlingStudyClick}\n            />\n            <br/>\n\n            <QueuedStudies\n                activeStudy={activeStudy}\n                queuedStudies={queuedStudies}\n                userSubscriptions={userSubscriptions}\n                onStudyClick={handlingStudyClick}\n            />\n\n        </div>\n    );\n}\n\nexport default LeftSideNav;\n"]},"metadata":{},"sourceType":"module"}