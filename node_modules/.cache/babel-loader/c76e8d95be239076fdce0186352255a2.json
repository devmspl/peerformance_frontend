{"ast":null,"code":"var _jsxFileName = \"/home/mspl/Desktop/peerformance_frontend/src/Signup/components/SubmitPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getCompanyDictionaries } from '../fetches';\nimport Button from '../../components/Button';\nimport LabelWithQuestionMark from '../../components/LabelWithQuestionMark';\nimport { PAGES, BUTTONS } from '../../constants/en';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst selectConfig = [['numberOfEmployees', PAGES.COMPANY_INFORMATIONS.FIELDS.NUMBER_OF_EMPLOYEES.LABEL, 'numberOfEmployees'], ['annualRevenue', PAGES.COMPANY_INFORMATIONS.FIELDS.ANNUAL_REVENUE.LABEL, 'annualRevenue'], ['reach', PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_REACH.LABEL, 'reach']];\n\nconst SubmitPage = _ref => {\n  _s();\n\n  let {\n    onSubmit,\n    form,\n    userEmail,\n    onChange,\n    setAuthorizationContactEmail\n  } = _ref;\n  const [companyDictionaries, setCompanyDictionaries] = useState(null);\n  const [alertMessage, setAlertMessage] = useState({\n    type: '',\n    message: ''\n  });\n  const [allowSelfAuth, setAllowSelfAuth] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await getCompanyDictionaries();\n\n        if (result && result.data) {\n          setCompanyDictionaries(result.data);\n        }\n      } catch (error) {\n        console.error(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleAllowSelfAuth = e => {\n    setAllowSelfAuth(prevState => !prevState);\n    const isChecked = e.target.checked;\n    isChecked ? setAuthorizationContactEmail(userEmail) : setAuthorizationContactEmail('');\n  };\n\n  const renderSelectValue = selectName => {\n    var _companyDictionaries$, _companyDictionaries$2;\n\n    return companyDictionaries === null || companyDictionaries === void 0 ? void 0 : (_companyDictionaries$ = companyDictionaries[selectName]) === null || _companyDictionaries$ === void 0 ? void 0 : (_companyDictionaries$2 = _companyDictionaries$.find(el => el.ID === form[selectName].value)) === null || _companyDictionaries$2 === void 0 ? void 0 : _companyDictionaries$2.value;\n  };\n\n  const setAlert = (type, message) => setAlertMessage({\n    type,\n    message\n  });\n\n  const checkFormIsFilled = () => !Object.keys(form).filter(inp => inp !== 'isFilled' && inp !== 'organizationId').every(input => !!form[input].value);\n\n  const renderSelects = (name, title, options) => {\n    var _companyDictionaries$3;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-input mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(LabelWithQuestionMark, {\n        name: name,\n        title: title,\n        notificationMessage: \"We need this to be able to compare you to businesses of a similar size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: name,\n        name: name,\n        value: renderSelectValue(name),\n        defaultValue: \"\",\n        onChange: onChange,\n        className: \"form-select p-2 mt-2\",\n        disabled: form.isFilled,\n        style: form[name].value === '' ? {\n          color: '#8B8898'\n        } : null,\n        children: [!form.isFilled && /*#__PURE__*/_jsxDEV(\"option\", {\n          hidden: true,\n          value: \"\",\n          children: \"Choose one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), companyDictionaries === null || companyDictionaries === void 0 ? void 0 : (_companyDictionaries$3 = companyDictionaries[options]) === null || _companyDictionaries$3 === void 0 ? void 0 : _companyDictionaries$3.map(obj => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: obj.ID,\n          children: obj.value\n        }, obj.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  };\n\n  const handleSubmit = () => {\n    if (!allowSelfAuth && form.authorizationContactEmail.value === userEmail) {\n      setAlert('danger', PAGES.COMPANY_INFORMATIONS.MESSAGES.DIFFERENT_EMAIL);\n    } else if (form.authorizationContactEmail.value.split('@')[1] !== userEmail.split('@')[1]) {\n      setAlert('danger', PAGES.COMPANY_INFORMATIONS.MESSAGES.EMAIL_FROM_THE_SAME_DOMAIN);\n    } else {\n      onSubmit();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group-inputs p-3\",\n    children: [alertMessage.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert alert-${alertMessage.type} notification-message`,\n      role: \"alert\",\n      children: alertMessage.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-input mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(LabelWithQuestionMark, {\n        name: \"name\",\n        title: PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.LABEL,\n        notificationMessage: PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.NOTIFICATION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control mt-2\",\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: form.name.value,\n        onChange: onChange,\n        placeholder: PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.PLACEHOLDER,\n        readOnly: form.isFilled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), selectConfig.map(s => renderSelects(...s)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-input mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(LabelWithQuestionMark, {\n        name: \"authorizationContactEmail\",\n        title: PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.LABEL,\n        notificationMessage: PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.NOTIFICATION\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: `form-control mt-2 ${alertMessage.message ? 'is-invalid' : ''}`,\n        type: \"email\",\n        id: \"authorizationContactEmail\",\n        name: \"authorizationContactEmail\",\n        value: form.authorizationContactEmail.value,\n        onChange: onChange,\n        placeholder: PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.PLACEHOLDER,\n        disabled: allowSelfAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group-input mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          onChange: handleAllowSelfAuth,\n          checked: allowSelfAuth,\n          id: \"self-authorization-requirement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          for: \"self-authorization-requirement\",\n          children: PAGES.COMPANY_INFORMATIONS.FIELDS.SELF_AUTHORIZATION.LABEL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      text: BUTTONS.SUBMIT,\n      disabled: checkFormIsFilled()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SubmitPage, \"MCGDUXGYY1QWttqFNC87NZNSj0c=\");\n\n_c = SubmitPage;\nexport default SubmitPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitPage\");","map":{"version":3,"sources":["/home/mspl/Desktop/peerformance_frontend/src/Signup/components/SubmitPage.jsx"],"names":["React","useEffect","useState","getCompanyDictionaries","Button","LabelWithQuestionMark","PAGES","BUTTONS","selectConfig","COMPANY_INFORMATIONS","FIELDS","NUMBER_OF_EMPLOYEES","LABEL","ANNUAL_REVENUE","COMPANY_REACH","SubmitPage","onSubmit","form","userEmail","onChange","setAuthorizationContactEmail","companyDictionaries","setCompanyDictionaries","alertMessage","setAlertMessage","type","message","allowSelfAuth","setAllowSelfAuth","fetchData","result","data","error","console","handleAllowSelfAuth","e","prevState","isChecked","target","checked","renderSelectValue","selectName","find","el","ID","value","setAlert","checkFormIsFilled","Object","keys","filter","inp","every","input","renderSelects","name","title","options","isFilled","color","map","obj","handleSubmit","authorizationContactEmail","MESSAGES","DIFFERENT_EMAIL","split","EMAIL_FROM_THE_SAME_DOMAIN","COMPANY_NAME","NOTIFICATION","PLACEHOLDER","s","CONTACT_EMAIL","SELF_AUTHORIZATION","SUBMIT"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getCompanyDictionaries } from '../fetches';\nimport Button from '../../components/Button';\nimport LabelWithQuestionMark from '../../components/LabelWithQuestionMark';\nimport { PAGES, BUTTONS } from '../../constants/en';\n\nconst selectConfig = [\n\t['numberOfEmployees', PAGES.COMPANY_INFORMATIONS.FIELDS.NUMBER_OF_EMPLOYEES.LABEL, 'numberOfEmployees'],\n\t['annualRevenue', PAGES.COMPANY_INFORMATIONS.FIELDS.ANNUAL_REVENUE.LABEL, 'annualRevenue'],\n\t['reach', PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_REACH.LABEL, 'reach'],\n];\n\nconst SubmitPage = ({ onSubmit, form, userEmail, onChange, setAuthorizationContactEmail }) => {\n\tconst [companyDictionaries, setCompanyDictionaries] = useState(null);\n\tconst [alertMessage, setAlertMessage] = useState({ type: '', message: '' });\n\tconst [allowSelfAuth, setAllowSelfAuth] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst result = await getCompanyDictionaries();\n\n\t\t\t\tif (result && result.data) {\n\t\t\t\t\tsetCompanyDictionaries(result.data);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(true);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t}, []);\n\n\tconst handleAllowSelfAuth = (e) => {\n\t\tsetAllowSelfAuth((prevState) => !prevState);\n\t\tconst isChecked = e.target.checked;\n\t\tisChecked ? setAuthorizationContactEmail(userEmail) : setAuthorizationContactEmail('');\n\t};\n\n\tconst renderSelectValue = (selectName) =>\n\t\tcompanyDictionaries?.[selectName]?.find((el) => el.ID === form[selectName].value)?.value;\n\n\tconst setAlert = (type, message) => setAlertMessage({ type, message });\n\n\tconst checkFormIsFilled = () =>\n\t\t!Object.keys(form)\n\t\t\t.filter((inp) => inp !== 'isFilled' && inp !== 'organizationId')\n\t\t\t.every((input) => !!form[input].value);\n\n\tconst renderSelects = (name, title, options) => {\n\t\treturn (\n\t\t\t<div key={name} className='group-input mt-4'>\n\t\t\t\t<LabelWithQuestionMark\n\t\t\t\t\tname={name}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tnotificationMessage='We need this to be able to compare you to businesses of a similar size'\n\t\t\t\t/>\n\t\t\t\t<select\n\t\t\t\t\tid={name}\n\t\t\t\t\tname={name}\n\t\t\t\t\tvalue={renderSelectValue(name)}\n\t\t\t\t\tdefaultValue=''\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tclassName='form-select p-2 mt-2'\n\t\t\t\t\tdisabled={form.isFilled}\n\t\t\t\t\tstyle={form[name].value === '' ? { color: '#8B8898' } : null}\n\t\t\t\t>\n\t\t\t\t\t{!form.isFilled && (\n\t\t\t\t\t\t<option hidden value=''>\n\t\t\t\t\t\t\tChoose one\n\t\t\t\t\t\t</option>\n\t\t\t\t\t)}\n\t\t\t\t\t{companyDictionaries?.[options]?.map((obj) => (\n\t\t\t\t\t\t<option key={obj.value} value={obj.ID}>\n\t\t\t\t\t\t\t{obj.value}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleSubmit = () => {\n\t\tif (!allowSelfAuth && form.authorizationContactEmail.value === userEmail) {\n\t\t\tsetAlert(\n\t\t\t\t'danger',\n\t\t\t\tPAGES.COMPANY_INFORMATIONS.MESSAGES.DIFFERENT_EMAIL\n\t\t\t);\n\t\t} else if (form.authorizationContactEmail.value.split('@')[1] !== userEmail.split('@')[1]) {\n\t\t\tsetAlert('danger', PAGES.COMPANY_INFORMATIONS.MESSAGES.EMAIL_FROM_THE_SAME_DOMAIN);\n\t\t} else {\n\t\t\tonSubmit();\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className='group-inputs p-3'>\n\t\t\t{alertMessage.message && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`alert alert-${alertMessage.type} notification-message`}\n\t\t\t\t\trole='alert'\n\t\t\t\t>\n\t\t\t\t\t{alertMessage.message}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div className='group-input mt-4'>\n\t\t\t\t<LabelWithQuestionMark\n\t\t\t\t\tname='name'\n\t\t\t\t\ttitle={PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.LABEL}\n\t\t\t\t\tnotificationMessage={PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.NOTIFICATION}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName='form-control mt-2'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tname='name'\n\t\t\t\t\tvalue={form.name.value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tplaceholder={PAGES.COMPANY_INFORMATIONS.FIELDS.COMPANY_NAME.PLACEHOLDER}\n\t\t\t\t\treadOnly={form.isFilled}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{selectConfig.map((s) => renderSelects(...s))}\n\t\t\t<div className='group-input mt-4'>\n\t\t\t\t<LabelWithQuestionMark\n\t\t\t\t\tname='authorizationContactEmail'\n\t\t\t\t\ttitle={PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.LABEL}\n\t\t\t\t\tnotificationMessage={PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.NOTIFICATION}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={`form-control mt-2 ${alertMessage.message ? 'is-invalid' : ''}`}\n\t\t\t\t\ttype='email'\n\t\t\t\t\tid='authorizationContactEmail'\n\t\t\t\t\tname='authorizationContactEmail'\n\t\t\t\t\tvalue={form.authorizationContactEmail.value}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tplaceholder={PAGES.COMPANY_INFORMATIONS.FIELDS.CONTACT_EMAIL.PLACEHOLDER}\n\t\t\t\t\tdisabled={allowSelfAuth}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='group-input mt-4'>\n\t\t\t\t<div className='form-check'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form-check-input'\n\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\tonChange={handleAllowSelfAuth}\n\t\t\t\t\t\tchecked={allowSelfAuth}\n\t\t\t\t\t\tid='self-authorization-requirement'\n\t\t\t\t\t/>\n\t\t\t\t\t<label className='form-check-label' for='self-authorization-requirement'>\n\t\t\t\t\t\t{PAGES.COMPANY_INFORMATIONS.FIELDS.SELF_AUTHORIZATION.LABEL}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<Button onClick={handleSubmit} text={BUTTONS.SUBMIT} disabled={checkFormIsFilled()} />\n\t\t</div>\n\t);\n};\n\nexport default SubmitPage;\n"]},"metadata":{},"sourceType":"module"}